let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

cmd.hear(/^(?:—Ä–µ—Ñ)\s([0-9]+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {

    let user = double.find(x => x.uid === Number(message.args[1]));

    if (user.id == message.user.id) return bot("–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–∞–º–∏ —Å–µ–±—è");

    if (!user) return bot("ID –Ω–µ –Ω–∞–π–¥–µ–Ω");

    if (message.user.ref == true) return bot("–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞")

    message.user.ref = true

    multiply = [1, 2, 3, 4];

    multiply = utils.pick(multiply)

    user.refcount += 1;

    user.fertilizer += 2;

    user.water += 2;

    if (user.refcount < 10) {
      if (multiply == 1) {
        user.c3 += 1;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω 1 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 1: ", error);
          }
        }
      } else if (multiply == 2) {
        user.balance += 10000000;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 2: ", error);
          }
        }
      } else if (multiply == 3) {
        user.c2 += 3;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–∞ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 3: ", error);
          }
        }
      } else if (multiply == 4) {
        user.rubli += 1;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 1 —Ä—É–±–ª—å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 4: ", error);
          }
        }
      }
    }

    if (user.refcount > 10 && user.refcount < 100) {
      if (multiply == 1) {
        user.c3 += 2;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 1: ", error);
          }
        }
      } else if (multiply == 2) {
        user.balance += 20000000;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 20.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 2: ", error);
          }
        }
      } else if (multiply == 3) {
        user.c2 += 5;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 5 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 3: ", error);
          }
        }
      } else if (multiply == 4) {
        user.rubli += 2;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 —Ä—É–±–ª—è –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 4: ", error);
          }
        }
      }
    }

    if (user.refcount == 666) {
      user.stars5 = true;
      if (user.notifications) {
        try {
          await vk.api.messages.send({
            user_id: user.id,
            message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
              "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –ª—É—á—à–∞—è –∑–≤–µ–∑–¥–∞ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
              "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
              keyboard: JSON.stringify({
                "inline": true,
                "buttons": [
                  [{
                    "action": {
                      "type": "text",
                      payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                      "label": `üîï`
                    },
                    "color": "negative"
                  },
          ]
                ]
              }),
            random_id: 0
          });
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ refcount == 666: ", error);
        }
      }
    }

    if (user.refcount > 100 && user.refcount != 666) {
      if (multiply == 1) {
        user.c3 += 3;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 1: ", error);
          }
        }
      } else if (multiply == 2) {
        user.balance += 50000000;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 2: ", error);
          }
        }
      } else if (multiply == 3) {
        user.c2 += 10;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 3: ", error);
          }
        }
      } else if (multiply == 4) {
        user.rubli += 3;
        if (user.notifications) {
          try {
            await vk.api.messages.send({
              user_id: user.id,
              message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 —Ä—É–±–ª—è –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                    [{
                      "action": {
                        "type": "text",
                        payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                        "label": `üîï`
                      },
                      "color": "negative"
                    },
            ]
                  ]
                }),
              random_id: 0
            });
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ multiply == 4: ", error);
          }
        }
      }
    }

    if (user.refcount % 20 == 0) {
      user.c6 += 1;
      if (user.notifications) {
        try {
          await vk.api.messages.send({
            user_id: user.id,
            message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
              "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω 1 –°–µ–∫—Ä–µ—Ç–Ω—ã–π-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
              "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
              keyboard: JSON.stringify({
                "inline": true,
                "buttons": [
                  [{
                    "action": {
                      "type": "text",
                      payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                      "label": `üîï`
                    },
                    "color": "negative"
                  },
          ]
                ]
              }),
            random_id: 0
          });
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ refcount % 20 == 0: ", error);
        }
      }
    }
  

    message.user.c3 += 2;

    return bot("‚úÖ–í—ã –ø–æ–ª—É—á–∏–ª–∏ 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –∏–≥—Ä–æ–∫–∞‚úÖ")
  }
});



cmd.hear(/^(?:—Ä–µ—Ñ)\s([^]+)$/i, async (message, bot) => {

  if (!message.isChat || message.chat.type === 1) {
    let f = message.text.split(" ");

    let m = /^(?:https)\:\/\/(?:vk.com)\//i;



    if (m.test(message.args[1])) {

      message.args[1] = message.args[1].replace(/(?:https)\:\/\/(?:vk.com)\//gi, "");

      await vk.api.utils.resolveScreenName({ screen_name: message.args[1] })

        .then(async (res) => {

          let user = double.find(x => x.id === res.object_id);

          if (!user) return bot(`–ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–≥—Ä–æ–∫–∞!`);



          if (user.id == message.user.id) return bot("–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–∞–º–∏ —Å–µ–±—è");

          if (!user) return bot("ID –Ω–µ –Ω–∞–π–¥–µ–Ω");

          if (message.user.ref == true) return bot("–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞")

          message.user.ref = true

          multiply = [1, 2, 3, 4];

          multiply = utils.pick(multiply)

          user.refcount += 1;

          user.fertilizer += 2;

          user.water += 2;

          if (user.refcount < 10) {
            if (multiply == 1) {
              user.c3 += 1;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω 1 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 2) {
              user.balance += 10000000;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 3) {
              user.c2 += 3;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–∞ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 4) {
              user.rubli += 1;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 1 —Ä—É–±–ª—å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            }
          }

          if (user.refcount > 10 && user.refcount < 100) {
            if (multiply == 1) {
              user.c3 += 2;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 2) {
              user.balance += 20000000;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 20.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 3) {
              user.c2 += 5;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 5 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 4) {
              user.rubli += 2;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 —Ä—É–±–ª—è –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            }
          }

          if (user.refcount == 666) {
            user.stars5 = true;
            if (user.notifications) {
              try {
                await vk.api.messages.send({
                  user_id: user.id,
                  message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                    "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –ª—É—á—à–∞—è –∑–≤–µ–∑–¥–∞ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                    "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                    keyboard: JSON.stringify({
                      "inline": true,
                      "buttons": [
                        [{
                          "action": {
                            "type": "text",
                            payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                            "label": `üîï`
                          },
                          "color": "negative"
                        },
                ]
                      ]
                    }),
                  random_id: 0
                });
              } catch (error) {
                console.error("");
              }
            }
          }

          if (user.refcount > 100 && user.refcount != 666) {
            if (multiply == 1) {
              user.c3 += 3;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 2) {
              user.balance += 50000000;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000.000 $ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 3) {
              user.c2 += 10;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤ –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            } else if (multiply == 4) {
              user.rubli += 3;
              if (user.notifications) {
                try {
                  await vk.api.messages.send({
                    user_id: user.id,
                    message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                      "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 —Ä—É–±–ª—è –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                      "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                      keyboard: JSON.stringify({
                        "inline": true,
                        "buttons": [
                          [{
                            "action": {
                              "type": "text",
                              payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                              "label": `üîï`
                            },
                            "color": "negative"
                          },
                  ]
                        ]
                      }),
                    random_id: 0
                  });
                } catch (error) {
                  console.error("");
                }
              }
            }
          }

          if (user.refcount % 20 == 0) {
            user.c6 += 1;
            if (user.notifications) {
              try {
                await vk.api.messages.send({
                  user_id: user.id,
                  message: "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n" +
                    "‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω 1 –°–µ–∫—Ä–µ—Ç–Ω—ã–π-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n" +
                    "üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                    keyboard: JSON.stringify({
                      "inline": true,
                      "buttons": [
                        [{
                          "action": {
                            "type": "text",
                            payload: JSON.stringify({ command: `—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª` }),
                            "label": `üîï`
                          },
                          "color": "negative"
                        },
                ]
                      ]
                    }),
                  random_id: 0
                });
              } catch (error) {
                console.error("");
              }
            }
          }

          message.user.c3 += 5;

          return bot("–í—ã –ø–æ–ª—É—á–∏–ª–∏ 5 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –∏–≥—Ä–æ–∫–∞)")

        })

    }


  }
});

cmd.hear(
  /^(?:—Ä–µ—Ñ|üèÜ —Ä–µ—Ñ–µ—Ä–∞–ª|—Ä–µ—Ñ–µ—Ä–∞–ª|@club223500959 —Ä–µ—Ñ|@club223500959 —Ä–µ—Ñ–µ—Ä–∞–ª|—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {

      const groupInfo = await vk.api.call('groups.getById', {
        access_token: tokenData.token,
        v: '5.131',
      });

      if (!groupInfo || groupInfo.length === 0) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
      }

      const groupId = groupInfo[0].id;


      let smileng = utils.pick([
        `üå∑`,
        `üå∏`,
        `üåπ`,
        `üå∫`,
        `üåº`,
        `üíê`,
        `‚ù§Ô∏è`,
        `üíì`,
        `üíï`,
      ]); //utils.pick([`‚ùÑÔ∏è`,`üéÑ`,`‚òÉÔ∏è`,`üéÖ`]);

      let ref = `https://vk.me/club${groupId}?ref=${message.senderId}&ref_source=${message.senderId}`;

      let refka = await vk.api.utils.getShortLink({ url: ref });

      return bot(`–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ ${utils.sp(
        message.user.refcount
      )} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ${smileng}

üí∞ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–∏–∑–æ–≤:
üë• –î–æ 10 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö - –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 1 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å, 3 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–∞, 1 —Ä—É–±–ª—å, 10.000.000 $
üë• –î–æ 100 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö- –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞, 20.000.000 $ –∏–ª–∏ 5 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–æ–≤, 2 —Ä—É–±–ª—è
üë• –î–æ 10000 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö - –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 3 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞, 50.000.000 $ , 10 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–æ–≤, 3 —Ä—É–±–ª—è
üë• –ó–∞ –∫–∞–∂–¥–æ–≥–æ 20 –∏–≥—Ä–æ–∫–∞ –¥–∞—ë—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–µ–π—Å
üë• –ó–∞ 666 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–≤–µ–∑–¥—É ¬´–î–æ–Ω–∞—Ç–Ω—ã–π –≥–∏–≥–∞–Ω—Ç¬ª, –ø—Ä–∏–±—ã–ª—å: 30 –ß–∞–∫–æ–†—É–±/—á–∞—Å

üìå –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${refka.short_url}

`);
    }
  }
);



let STATIC_REF_LINK = 'https://vk.me/club228340301?ref=–±–æ–≥–∞—á';


cmd.hear(
  /^(?:—Å–∏—Å—Ç–µ–º–∞)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 4) {
      let ref = STATIC_REF_LINK
      let refka = await vk.api.utils.getShortLink({ url: ref });

      return bot(`
üìå –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: ${refka.short_url}
`);
    }
  }
);


cmd.hear(
  /^(?:—Å–±—Ä–æ—Å)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 4) {
      double.forEach(user => {
        user.perexod = false;
      });
      return message.send("‚ôª –ü–µ—Ä–µ—Ö–æ–¥—ã —Å–±—Ä–æ—à–µ–Ω—ã!");
    }
  }
);

cmd.hear(
  /^(?:—Å–∞–º–æ–±–∞–Ω)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type >= 1) {
      message.user.bans.ban = true
      message.user.bans.reason = '–°–∞–º–æ–±–∞–Ω.'
      return bot(`
–ì–æ—Ç–æ–≤–æ.
`);
    }
  }
);



module.exports = commands;
