  let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')
let chats = require('../database/chats.json')
let log = require('../database/log.json')
let botinfo = require('../database/botinfo.json')
let clans = require('../database/clans.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const forbiddenTitles = [
  "–ë–∏–∑–Ω–µ—Å–º–µ–Ω", 
  "üî•Supportüî•",
  "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", 
  "–£–¥–∞–ª—ë–Ω–Ω—ã–π —Ç–∏—Ç—É–ª"









];

let cars = require('../spisok/–º–∞—à–∏–Ω—ã.js')
let trees = require('../spisok/–¥–µ—Ä–µ–≤—å—è.js')
let presidents = require("../database/presidents.json");

let pets = require('../spisok/–ø–∏—Ç–æ–º—Ü—ã.js')
let pets2 = require('../spisok/–ø–∏—Ç–æ–º—Ü—ã2.js')
let pets3 = require('../spisok/–ø–∏—Ç–æ–º—Ü—ã3.js')
let petsupd = require('../spisok/–ø–∏—Ç–æ–º—Ü—ã—É–ª.js')
let yachts = require('../spisok/—è—Ö—Ç—ã.js')
let airplanes = require('../spisok/—Å–∞–º–æ–ª–µ—Ç—ã.js')
let helicopters = require('../spisok/–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã.js')
let apartments = require('../spisok/–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã.js')
let homes = require('../spisok/–¥–æ–º–∞.js')
let videocards = require('../spisok/–≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã.js')
let farms = require('../spisok/—Ñ–µ—Ä–º—ã.js')
let minertool = require('../spisok/–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.js')
let computers = require('../spisok/–∫–æ–º–ø—å—é—Ç–µ—Ä—ã.js')
let works = require('../spisok/—Ä–∞–±–æ—Ç–Ω–∏–∫–∏.js')
let businesses2 = require("../spisok/–±–∏–∑–Ω–µ—Å—ã.js")
const phones = require("../spisok/—Ç–µ–ª–µ—Ñ–æ–Ω—ã.js")

let businesses = require("../spisok/business spisok.js")

const tokenData = getToken();


const tokensFilePath4 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞.json';

const tokensFilePath2 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–∏–¥ –±–µ—Å–µ–¥.json';

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken4() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath4, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken2() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath2, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken3() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData2 = getToken2(); 
const tokenData3 = getToken3(); 
const tokenData4 = getToken4(); 

const tokensFilePath5 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å—Å—ã–ª–∫–∏ —á–∞—Ç–æ–≤.json';

function getToken5() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath5, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData5 = getToken5(); 


let adminka = tokenData5.admin

const coaf = tokenData2.coaf
let val1 = tokenData3.val1 
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4


let tokensCache = null;

setInterval(() => {
  tokensCache = getToken3(); 
  if (tokensCache) {
      val1 = tokensCache.val1; 
      val2 = tokensCache.val2; 
      val3 = tokensCache.val3; 
      val4 = tokensCache.val4; 
  }
}, 1000);

const chatlogi = tokenData2.chatlogi;
const spoler = tokenData4;

const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

cmd.hear(/^(?:–ø–±–∞–Ω|pban)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ üëÆ‚Äç‚ôÇÔ∏è`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

  if (message.chat.type === 4){


  let user = double.find((x) => x.uid === Number(message.args[1]));

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.pban !== false)
    return bot(`—É –∏–≥—Ä–æ–∫–∞ —É–∂–µ –∏—Ç–∞–∫ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∞ üö´`);

  user.bans.pban = true;

  user.stock.stpban = "–î–∞";

  message.user.astats.pbans += 1;

  const adminTag = `@id${message.user.id} (${message.user.tag})`; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥ –∞–¥–º–∏–Ω–∞

    try {
      await vk.api.messages.send({
        user_id: user.id,
        message: `${adminTag} –≤–∞–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤.`,
        random_id: 0,
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      return bot(`–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–µ—Ä–µ–¥–∞—á—É –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚ùå \n –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!`);
    }

  return bot(`–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–µ—Ä–µ–¥–∞—á—É –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚ùå \n –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`);
}
});

cmd.hear(/^(?:–ø—Ä–∞–∑–±–∞–Ω|punban)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ üëÆ‚Äç‚ôÇÔ∏è`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

  if (message.chat.type === 4){


  let user = double.find((x) => x.uid === Number(message.args[1]));

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.pban !== true)
    return bot(`—É –∏–≥—Ä–æ–∫–∞ —É–∂–µ –∏—Ç–∞–∫ –≤–∫–ª—é—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–∞—á–µ ‚úÖ`);

  user.bans.pban = false;

  user.stock.stpban = "–ù–µ—Ç";

  const adminTag = `@id${message.user.id} (${message.user.tag})`; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥ –∞–¥–º–∏–Ω–∞

   try {
      await vk.api.messages.send({
        user_id: user.id,
        message: `${adminTag} –≤–∞–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤.`,
        random_id: 0,
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      return bot(`–í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–µ—Ä–µ–¥–∞—á—É –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚úÖ \n –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!`);
    }

  return bot(`–í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–µ—Ä–µ–¥–∞—á—É –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚úÖ \n –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`);
  }
});

cmd.hear(/^(?:—Ä–±–∞–Ω|rban)\s([0-9]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

  if (message.chat.type === 4){


  let user = double.find(x => x.uid === Number(message.args[1]));

  if (!user) return bot(`–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! ‚ùå`);

  if (user.bans.rban != false) return bot(`—É –∏–≥—Ä–æ–∫–∞ —É–∂–µ –∑–∞–∫—Ä—ã—Ç —Ä–µ–ø–æ—Ä—Ç ‚ùå`);

  user.bans.rbantimer = Date.now() + 604800000;

  user.bans.rban = true;

  user.stock.strban = "–î–∞";

  message.user.astats.rbans += 1;

  const adminName = `@id${message.user.id}(${message.user.tag})`;

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Å–Ω—è—Ç–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  const unlockDate = new Date(user.bans.rbantimer);
  const formattedUnlockDate = unlockDate.toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
    second: 'numeric',
    timeZone: 'Europe/Moscow' // –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
  });

  try {
      await vk.api.messages.send({
        user_id: user.id,
        message: `${adminName} –≤–∞–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–ø–æ—Ä—Ç—ã –Ω–∞ –Ω–µ–¥–µ–ª—é. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±—É–¥–µ—Ç —Å–Ω—è—Ç–∞ ${formattedUnlockDate}.`,
        random_id: 0,
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      return bot(`–í—ã –≤—ã–¥–∞–ª–∏ –±–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞ –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚ùå \n –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!`);
    }


  return bot(`–í—ã –≤—ã–¥–∞–ª–∏ –±–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞ –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚ùå \n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`);

}

});

cmd.hear(/^(?:—Ä—Ä–∞–∑–±–∞–Ω|runban)\s([0-9]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ üëÆ‚Äç‚ôÇÔ∏è`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò üí¨.`)
 }

  if (message.chat.type === 4){


  let user = double.find(x => x.uid === Number(message.args[1]));

  if (!user) return bot(`–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! ‚ùå`);

  if (user.bans.rban != true) return bot(`—É –∏–≥—Ä–æ–∫–∞ —Ä–µ–ø–æ—Ä—Ç —É–∂–µ –≤–∫–ª—é—á—ë–Ω üôÉ`);

  user.bans.rbantimer = 0; // –∏–ª–∏ delete user.bans.rbantimer, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–µ

  user.bans.rban = false;

  user.stock.strban = "–ù–µ—Ç";

  try {
      await vk.api.messages.send({
        user_id: user.id,
        message: `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–ø–æ—Ä—Ç—ã. üéâ`,
        random_id: 0,
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      return bot(`–í—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ —Ä–µ–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚úÖ \n –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!`);
    }

  return bot(`–í—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ —Ä–µ–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫—É - @id${user.id} (${user.tag}) ‚úÖ`);
  }
});

cmd.hear(/^(?:–∞—Å–º—Å)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat){
     return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
  }

  if (message.chat.type === 4){
  try {


    const userId = Number(message.args[1]);
    if (isNaN(userId)) return; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ –∏–≥—Ä–æ–∫–∞.

    const user = await double.find(x => x.uid === userId);
    if (!user || !user.id) return; // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.

    await vk.api.messages.send({
      user_id: user.id,
      message: `‚ñ∂Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä / –∞–≥–µ–Ω—Ç –Ω–∞–ø–∏—Å–∞–ª –í–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ: ‚ùÑÔ∏è\n‚úèÔ∏è –¢–µ–∫—Å—Ç: ¬´${message.args[2]}¬ª ‚úÖ`,
      random_id: 0
    });
  } catch (error) {
    console.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", error); 
  }

  return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–ø–∏—Å–∞–ª–∏ –∏–≥—Ä–æ–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ùÑÔ∏è\nüì© –¢–µ–∫—Å—Ç: ¬´${message.args[2]}¬ª`);
}else{
  return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
}
});

cmd.hear(/^(?:–Ω—Ä–µ–ø|‚ú® –ù—Ä–µ–ø)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){



  let i = 0;
  let test = ``;
  let user = double.filter(x => x.rep === true).map(x => {
    i += 1;
    test += `‚Ññ${i}. @id${x.id} (${x.tag}) (ID ‚Ä∫ ${x.uid}). –í–æ–ø—Ä–æ—Å ‚Ä∫ ${x.vopros}\n\n`;
  });

  return bot(`–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ —Ä–µ–ø–æ—Ä—Ç—ã/–≤–æ–ø—Ä–æ—Å—ã:

${test}`);

  }

});

cmd.hear(/^(?:–∞–¥–º–∏–Ω-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|–∞—Å—Ç–∞—Ç–∞|–∞—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|astat|–∞—Å—Ç–∞—Ç|üÖ∞ –ê—Å—Ç–∞—Ç–∞)$/i,async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

    if (message.chat.type === 4){

      const nonAdminUsers = double.filter(user => user.settings.adm < 1);

      let totalBalance = nonAdminUsers.reduce((acc, user) => acc + (user.balance || 0), 0);
      let totalbtc = nonAdminUsers.reduce((acc, user) => acc + (user.btc || 0), 0);
      let totalrubli = nonAdminUsers.reduce((acc, user) => acc + (user.rubli || 0), 0);
      let totalrating = nonAdminUsers.reduce((acc, user) => acc + (user.rating || 0), 0);
      let totalgb = nonAdminUsers.reduce((acc, user) => acc + (user.balance2 || 0), 0);

      let totalDogecoin = nonAdminUsers.reduce((acc, user) => acc + (user.dcoins || 0), 0);
      let totalChakorubs = nonAdminUsers.reduce((acc, user) => acc + (user.rub || 0), 0);
      let totalTickets = nonAdminUsers.reduce((acc, user) => acc + (user.bilet || 0), 0);
      let totalIron = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.zhelezo || 0), 0);
      let totalGold = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.zoloto || 0), 0);
      let totalDiamonds = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.almaz || 0), 0);
      let totalMatter = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.materia || 0), 0);
      let totalObsidian = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.obsidian || 0), 0);
      let totalPlasma = nonAdminUsers.reduce((acc, user) => acc + (user.ruds.plazma || 0), 0);
      let totalEnergy = nonAdminUsers.reduce((acc, user) => acc + (user.energy || 0), 0);

      let totalCommonCases = nonAdminUsers.reduce((acc, user) => acc + (user.c1 || 0), 0);
      let totalGoldenCases = nonAdminUsers.reduce((acc, user) => acc + (user.c2 || 0), 0);
      let totalDonationCases = nonAdminUsers.reduce((acc, user) => acc + (user.c3 || 0), 0);
      let totalRacingCases = nonAdminUsers.reduce((acc, user) => acc + (user.c4 || 0), 0);
      let totalHalloweenCases = nonAdminUsers.reduce((acc, user) => acc + (user.c5 || 0), 0);
      let totalSecretCases = nonAdminUsers.reduce((acc, user) => acc + (user.c6 || 0), 0);
      let totalSoundCases = nonAdminUsers.reduce((acc, user) => acc + (user.c7 || 0), 0);
      let totalNewYearCases = nonAdminUsers.reduce((acc, user) => acc + (user.c8 || 0), 0);
      let totalPremiumCases = nonAdminUsers.reduce((acc, user) => acc + (user.c9 || 0), 0);
      let totalUltraCases = nonAdminUsers.reduce((acc, user) => acc + (user.c10 || 0), 0);
      let totalAdminCases = nonAdminUsers.reduce((acc, user) => acc + (user.c11 || 0), 0);

      let totalAdminCases2 = nonAdminUsers.reduce((acc, user) => acc + (user.c12 || 0), 0);
      let totalAdminCases3 = nonAdminUsers.reduce((acc, user) => acc + (user.c13 || 0), 0);
      let totalAdminCases4 = nonAdminUsers.reduce((acc, user) => acc + (user.c14 || 0), 0);
      let totalAdminCases5 = nonAdminUsers.reduce((acc, user) => acc + (user.c15 || 0), 0);
      let totalAdminCases6 = nonAdminUsers.reduce((acc, user) => acc + (user.c16 || 0), 0);


      return bot(`ü§ñ –ò–≥—Ä–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:

üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–æ–≤: ${utils.sp(totalBalance)} $
üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å ${val4}: ${utils.sp(totalgb)} ${val4}
ü™ô –û–±—â–∏–π BTC: ${utils.sp(totalbtc)} BTC
üíµ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤ —Ä—É–±–ª—è—Ö: ${utils.sp(totalrubli)} ‚ÇΩ

‚ö†Ô∏è –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${utils.sp(totalrating)} üëë

üìä –†–µ—Å—É—Ä—Å—ã:
- ü™ô –í—Å–µ–≥–æ Dogecoin: ${utils.sp(totalDogecoin)}
- üíé –í—Å–µ–≥–æ —á–∞–∫–æ—Ä—É–±–æ–≤: ${utils.sp(totalChakorubs)}
- üéüÔ∏è –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: ${utils.sp(totalTickets)}
- ‚öíÔ∏è –í—Å–µ–≥–æ –∂–µ–ª–µ–∑–∞: ${utils.sp(totalIron)}
- ü™ô –í—Å–µ–≥–æ –∑–æ–ª–æ—Ç–∞: ${utils.sp(totalGold)}
- üíé –í—Å–µ–≥–æ –∞–ª–º–∞–∑–æ–≤: ${utils.sp(totalDiamonds)}
- üåå –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∏: ${utils.sp(totalMatter)}
- üñ§ –í—Å–µ–≥–æ –æ–±—Å–∏–¥–∏–∞–Ω–∞: ${utils.sp(totalObsidian)}
- ‚ö° –í—Å–µ–≥–æ –ø–ª–∞–∑–º—ã: ${utils.sp(totalPlasma)}
- üîã –í—Å–µ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏: ${utils.sp(totalEnergy)}

üéÅ –ö–µ–π—Å—ã:
- üé≤ –í—Å–µ–≥–æ –æ–±—ã—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalCommonCases)}
- üèÜ –í—Å–µ–≥–æ –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalGoldenCases)}
- üíñ –í—Å–µ–≥–æ –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤: ${utils.sp(totalDonationCases)}
- üèéÔ∏è –í—Å–µ–≥–æ Starr Drops: ${utils.sp(totalRacingCases)}
- üéÉ –í—Å–µ–≥–æ Halloween –∫–µ–π—Å–æ–≤: ${utils.sp(totalHalloweenCases)}
- üîí –í—Å–µ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalSecretCases)}
- üé∂ –í—Å–µ–≥–æ –∞–≤—Ç–æ–∑–≤—É–∫ –∫–µ–π—Å–æ–≤: ${utils.sp(totalSoundCases)}
- üéÑ –í—Å–µ–≥–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalNewYearCases)}
- üåü –í—Å–µ–≥–æ –ø—Ä–µ–º–∏—É–º –∫–µ–π—Å–æ–≤: ${utils.sp(totalPremiumCases)}
- üöÄ –í—Å–µ–≥–æ —É–ª—å—Ç—Ä–∞ –∫–µ–π—Å–æ–≤: ${utils.sp(totalUltraCases)}
- üëë –í—Å–µ–≥–æ –∞–¥–º–∏–Ω –∫–µ–π—Å–æ–≤: ${utils.sp(totalAdminCases)}

- üíé –í—Å–µ–≥–æ —Å–≤–µ—Ä—Ö—Ä–µ–¥–∫–∏—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalAdminCases2)}
- ‚ú® –í—Å–µ–≥–æ —ç–ø–∏—á–µ—Å–∫–∏—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalAdminCases3)}
- üîÆ –í—Å–µ–≥–æ –º–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalAdminCases4)}
- üåü –í—Å–µ–≥–æ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ${utils.sp(totalAdminCases5)}

`);
    }else{
      return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
    }
  }
);

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω|unban)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){

  let user = double.find((x) => x.uid === Number(message.args[1]));

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== true) return bot(`–∏–≥—Ä–æ–∫ –Ω–µ –≤ –±–∞–Ω–µ! üíö`);

  user.bans.bantimer = 0;

  user.bans.ban = false;

  message.user.bantop = false;

  await bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\n`);

  await vk.api.messages.send({
    user_id: user.id,

    message: `üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! üíö\n\n‚ñ∂Ô∏è –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª: @id${message.user.id} (${message.user.tag}) ü§ó`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:



üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) —Å–Ω—è–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–≥—Ä–æ–∫–∞ ID: ${message.args[1]} üò°`,
  })
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type == 4){
  


  let user = double.find((x) => x.uid === Number(message.args[1]));

  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);
  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);


  if (message.args[2]) {
    user.bans.reason = message.args[2];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  const datka = new Date(user.bans.bantimer);

  message.user.astats.bans += 1;

  message.user.bantop = true;

  user.bans.ban = true;

  await bot(
    `–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[2]}\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${user.bans.reason
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå `,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:

üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[1]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: –±–µ—Å—Å—Ä–æ—á–Ω–æ üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[2]}`,
  });
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s(3–¥–Ω)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){

  message.user.timers.ban = Date.now() + 900000;

  let user = double.find((x) => x.uid === Number(message.args[2]));



  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
  user.bans.ban = true;
  if (message.args[3]) {
    user.bans.reason = message.args[3];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  user.bans.bantimer = Date.now() + 86400000 * 3;
  const datka = new Date(user.bans.bantimer);
  message.user.astats.bans += 1;

  message.user.bantop = true;

  await bot(
    `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:



üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 3 –¥–Ω—è üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]}`,
  });
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s(–º–µ—Å—è—Ü)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){
  let user = double.find((x) => x.uid == message.args[2]);

  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
  user.bans.ban = true;
  if (message.args[3]) {
    user.bans.reason = message.args[3];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  user.bans.bantimer = Date.now() + 2629744000;
  const datka = new Date(user.bans.bantimer);
  message.user.astats.bans += 1;
  message.user.bantop = true;

  await bot(
    `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:

üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 1 –º–µ—Å—è—Ü üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]}`,
  });
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s(–Ω–µ–¥–µ–ª—è)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){
  let user = double.find((x) => x.uid == message.args[2]);


  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
  user.bans.ban = true;
  if (message.args[3]) {
    user.bans.reason = message.args[3];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  user.bans.bantimer = Date.now() + 604800000;
  const datka = new Date(user.bans.bantimer);
  message.user.astats.bans += 1;
  message.user.bantop = true;

  await bot(
    `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:

üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 7 –¥–Ω–µ–π üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]}`,
  });
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s(—á–∞—Å)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){

  let user = double.find((x) => x.uid == message.args[2]);



  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
  user.bans.ban = true;
  if (message.args[3]) {
    user.bans.reason = message.args[3];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  user.bans.bantimer = Date.now() + 3600000;
  const datka = new Date(user.bans.bantimer);
  message.user.astats.bans += 1;
  message.user.bantop = true;

  await bot(
    `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:

üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 1 —á–∞—Å üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]}`,
  });
}
});

cmd.hear(/^(?:–±–∞–Ω|ban)\s(–¥–µ–Ω—å)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`)

  if (!message.isChat || message.chat.type !== 4){
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`)
 }

 if (message.chat.type === 4){

  let user = double.find((x) => x.uid == message.args[2]);


  if (user.settings.adm >= message.user.settings.adm) return bot(`–ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–≤–Ω—ã–º –∏–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–≥–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.`);

  if (!user)
    return bot(
      `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
    );

  if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
  user.bans.ban = true;
  if (message.args[3]) {
    user.bans.reason = message.args[3];
  } else {
    user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
  }
  user.bans.bantimer = Date.now() + 86400000;
  const datka = new Date(user.bans.bantimer);
  message.user.astats.bans += 1;
  message.user.bantop = true;

  await bot(
    `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n\n`
  );

  await vk.api.messages.send({
    user_id: user.id,

    message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
      }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

    random_id: 0,
  });

  await vk.api.messages.send({
    chat_id: chatlogi,
    random_id: 0,
    message: `‚ö†Ô∏è ADM-LOG:

üéÖ ${message.user.settings.adm > 5 ? 'üëº –ë–û–ì üëº' : message.user.settings.adm
        .toString()
        .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
        .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
      }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
      } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 1 –¥–µ–Ω—å üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]}`,
  });
}
});

cmd.hear(/^(?:–ø–µ—Ä–º –ª–∏—Å—Ç)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {
    const bannedUsers = double.filter(
      x => x.bans.ban === true && x.bans.bantimer == 0
    );

    const totalBanned = bannedUsers.length;

    if (totalBanned === 0) {
      return bot(`–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. ‚úÖ`);
    }

    let outputText = bannedUsers
      .map((x, index) => `${index + 1}. @id${x.id}(${x.tag}) (${x.uid}) - –ü—Ä–∏—á–∏–Ω–∞: ${x.bans.reason || "-"}`)
      .join('\n');

    bot(`–í—Å–µ–≥–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalBanned} üö´\n\n${outputText}`);
  }
});



cmd.hear(/^(?:„ÄΩÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

  let admins = double.filter((x) => x.settings.adm === 2);

  let text = "‚ñ∂Ô∏è ‚ûñ –°–æ—Å—Ç–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n\n";

  if (admins.length > 0) {
    text += "‚¨áÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n";
    text += admins.map((x) => `¬ª @id${x.id}(${x.tag}) [ID: ${x.uid}]`).join('\n');
    text += `\n–í—Å–µ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins.length}\n\n`;
  } else {
    text = "‚ñ∂Ô∏è ‚ûñ –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—É—Å—Ç.";
  }

  return bot(text);
}
});

cmd.hear(/^(?:‚ôªÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {


  const moderators = double.filter((x) => x.settings.adm === 1);


  const totalModerators = moderators.length;


  let text = "‚ñ∂Ô∏è ‚ûñ –°–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n\n"; 

  if (totalModerators > 0) {

    text += "‚¨áÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:\n"; 
    const moderatorList = moderators.map((x) => `¬ª @id${x.id}(${x.tag}) [ID: ${x.uid}]`).join('\n');
    text += moderatorList; 

    text += `\n\n–í—Å–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤: ${totalModerators} üëÆ\n`; 
  } else {
    text += "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. üòî\n";
  }


  return bot(text);
}
});

cmd.hear(/^(?:üìõ –ì–ª–∞–≤–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

  const filterAdmins = (level) => double.filter((x) => x.settings.adm === level).map((x) => `¬ª @id${x.id}(${x.tag}) [ID: ${x.uid}]`).join('\n');

  const bogList = filterAdmins(6);
  const osnList = filterAdmins(5);
  const zamList = filterAdmins(4);
  const gaList = filterAdmins(3);

  let text = "‚ñ∂Ô∏è ‚ûñ –°–æ—Å—Ç–∞–≤ —Å—Ç–∞—Ä—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n\n";

  if (bogList) text += "üëº –ë–û–ì–ò –ë–û–¢–ê üëº:\n" + bogList + "\n\n";
  if (osnList) text += "ü§ó –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å:\n" + osnList + "\n\n";
  if (zamList) text += "üòé –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è:\n" + zamList + "\n\n";
  if (gaList) text += "üî± –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n" + gaList + "\n\n";

  return bot(text);
  }
});

cmd.hear(/^(?:—Å–æ—Å—Ç–∞–≤)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

  bot(
    `–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:`,

    {
      keyboard: JSON.stringify({
        inline: true,

        buttons: [
          [
            {
              action: {
                type: "text",

                payload: "{}",

                label: "üìõ –ì–ª–∞–≤–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã",
              },

              color: "positive",
            },
          ],

          [
            {
              action: {
                type: "text",

                payload: "{}",

                label: "„ÄΩÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã",
              },

              color: "positive",
            },
          ],

          [
            {
              action: {
                type: "text",

                payload: "{}",

                label: "‚ôªÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã",
              },

              color: "positive",
            },
          ],

        ],
      }),
    }
  );
}
});

cmd.hear(/^(?:lget|–ª–∏–º–∏—Ç—ã –≥–µ—Ç|–ª–≥–µ—Ç|limget)\s([0-9]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);


  let user = double.find(x => x.uid === Number(message.args[1]));
  if (!user) return bot(`–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ üåßÔ∏è`);

  return bot(`–õ–∏–º–∏—Ç—ã –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag}) ‚òÉÔ∏è

‚úçÔ∏è –õ–∏–º–∏—Ç –Ω–∏–∫-–Ω–µ–π–º–∞: ${user.limit.nicklimit} —Å–∏–º-–æ–≤
üí≥ –õ–∏–º–∏—Ç –±–∞–Ω–∫–∞: ${utils.sp(user.limit.banklimit)}$
üíµ –õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏: ${utils.sp(user.limit.playerlimit)}$
üîã –õ–∏–º–∏—Ç —Ñ–µ—Ä–º: ${utils.sp(user.limit.farmlimit)} —à—Ç.
üìº –õ–∏–º–∏—Ç –≤–∏–¥–µ–æ–∫–∞—Ä—Ç: ${utils.sp(user.limit.videocardlimit)} —à—Ç.

‚ùì –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ –≤–≤–µ–¥–∏—Ç–µ ¬´–ì–µ—Ç [ID –∏–≥—Ä–æ–∫–∞]¬ª üòÅ`);
});

cmd.hear(/^(?:–ª–æ–≥–∏)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);


  const userId = message.args[1];

  if (!log[userId] || log[userId].length < 10) {
    return bot(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–æ–æ–±—â–µ–Ω–∏–π. üìâ`);
  }

  if (!message.isChat) return bot(`–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ –±–æ—Ç–∞! ‚ùå`);

  let logs = log[userId];
  let logMessages = logs.slice(-10).map(logEntry => {
    return `${logEntry.time} ‚è∞ ‚Äî ${logEntry.msg}`; // –ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏
  }).join('\n'); // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ª–æ–≥–æ–≤

  return bot(`–õ–æ–≥–∏ –∏–≥—Ä–æ–∫–∞ ¬´‚Ññ${userId}¬ª ‚úâÔ∏èüí¨\n\n${logMessages}`);
});

cmd.hear(/^(?:—Å–ø–∏—Å–æ–∫|—Å–ø–∏—Å–∫–∏|—á–∞—Ç—ã)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);


  // –§–∏–ª—å—Ç—Ä—É–µ–º —á–∞—Ç—ã —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ ID
  const filteredChats = chats.filter(chat => chat.id !== undefined);

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∏–∫–æ–Ω–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤
  const chatList = filteredChats.map(chat => {
    let statusIcon = '‚ùì'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    let statusText = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    
    switch(chat.type) {
      case 1:
        statusIcon = 'üí¨';
        statusText = '–ò–ì–†–û–í–û–ô';
        break;
      case 2:
        statusIcon = 'üí∞';
        statusText = 'DOUBLE';
        break;
      case 4:
          statusIcon = 'üÖ∞';
          statusText = '–ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–Ø';
          break;
      case 5:
        statusIcon = 'üö´';
        statusText = '–ë–ê–ù';
        break;
      default:
        statusIcon = '‚ùì';
        statusText = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    }
    
    return `${statusIcon} #${chat.id} - ${statusText}`;
  }).join("\n");

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —á–∞—Ç–æ–≤
  const header = `üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ (–≤—Å–µ–≥–æ: ${filteredChats.length}):`;
  
  return bot(`${header}\n${chatList || "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤"}`);
});

cmd.hear(/^(?:Get case|get case|gs)\s([0-9]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);



  let user = double.find(x => x.uid === Number(message.args[1]));
  if (!user) return bot(`–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ üåßÔ∏è`);

  return bot(`–ö–µ–π—Å—ã –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag}) ‚òÉÔ∏è

‚úçÔ∏è –æ–±—ã—á–Ω—ã–π –∫–µ–π—Å: ${user.c1 || 0} —à—Ç
üèÜ –∑–æ–ª–æ—Ç–æ–π –∫–µ–π—Å: ${user.c2 || 0} —à—Ç
üíñ –¥–æ–Ω–∞—Ç-–∫–µ–π—Å: ${user.c3 || 0} —à—Ç
üèéÔ∏è Starr Drop: ${user.c4 || 0} —à—Ç
üéÉ Halloween –∫–µ–π—Å: ${user.c5 || 0} —à—Ç
üîí —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–µ–π—Å: ${user.c6 || 0} —à—Ç
üé∂ –∞–≤—Ç–æ–∑–≤—É–∫ –∫–µ–π—Å: ${user.c7 || 0} —à—Ç
üéÑ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –∫–µ–π—Å: ${user.c8 || 0} —à—Ç
üåü –ø—Ä–µ–º–∏—É–º –∫–µ–π—Å: ${user.c9 || 0} —à—Ç
üöÄ —É–ª—å—Ç—Ä–∞ –∫–µ–π—Å: ${user.c10 || 0} —à—Ç
üëë –∞–¥–º–∏–Ω –∫–µ–π—Å: ${user.c11 || 0} —à—Ç

üíé —Å–≤–µ—Ä—Ö—Ä–µ–¥–∫–∏–π –∫–µ–π—Å: ${user.c12 || 0} —à—Ç
‚ú® —ç–ø–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å: ${user.c13 || 0} —à—Ç
üîÆ –º–∏—Ñ–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å: ${user.c14 || 0} —à—Ç
üåü –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–µ–π—Å: ${user.c15 || 0} —à—Ç
üí´ –∞–¥–º–∏–Ω –∫–µ–π—Å 2: ${user.c16 || 0} —à—Ç
`);
});

cmd.hear(/^(?:–≤–∫–ª–∞—Å—Ç–∞—Ç—É—Å)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

    const keyboard = JSON.stringify({
      inline: true,
      buttons: [
        [{
          action: {
            type: "text",
            payload: { command: `–≤—ã–∫–ª–∞—Å—Ç–∞—Ç—É—Å` },
            label: `–ø–µ—Ä–µ–¥—É–º–∞–ª`
          },
          color: "negative"
        }]
      ]
    });

    let smileng = utils.pick([
      `üå∑`,
      `üå∏`,
      `üåπ`,
      `üå∫`,
      `üåº`,
      `üíê`,
      `‚ù§Ô∏è`,
      `üíì`,
      `üíï`,
    ]);

    if (message.user.settings.adm < 1)
      return bot(`üö´ –£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è üõ†Ô∏è ¬´–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –≤—ã—à–µ¬ª! üîπ‚ú®`);

    message.user.settings.astat = true;

    return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤–∫–ª—é—á–∏–ª–∏ –∞–¥–º–∏–Ω—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å! ${smileng} üöÄ`, { keyboard });
  
});

cmd.hear(/^(?:–≤—ã–∫–ª–∞—Å—Ç–∞—Ç—É—Å)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);



    const keyboard = JSON.stringify({
      inline: true,
      buttons: [
        [{
          action: {
            type: "text",
            payload: { command: `–≤–∫–ª–∞—Å—Ç–∞—Ç—É—Å` },
            label: `—Ö–æ—á—É —Å—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–∏—Ç—å`
          },
          color: "positive"
        }]
      ]
    });

    let smileng = utils.pick([
      `üå∑`,
      `üå∏`,
      `üåπ`,
      `üå∫`,
      `üåº`,
      `üíê`,
      `‚ù§Ô∏è`,
      `üíì`,
      `üíï`,
    ]);

    if (message.user.settings.adm < 1)
      return bot(`üö´ –£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è üõ†Ô∏è ¬´–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –≤—ã—à–µ¬ª! üîπ‚ú®`);

    message.user.settings.astat = false;

    return bot(`–≤—ã–∫–ª—é—á–∏–ª –∞–¥–º–∏–Ω—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å! ${smileng}`, { keyboard });

});

cmd.hear(/^(?:—Å–µ—Ç–Ω–∏–∫)\s([0-9]+)\s?(.*)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

  const groupInfo = await vk.api.call('groups.getById', {
    access_token: tokenData.token,
    v: '5.131',
  });

  if (!groupInfo || groupInfo.length === 0) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
  }

  const groupId = groupInfo[0].id;


  let user = double.find(x => x.uid === Number(message.args[1]));
  if (!user) return bot(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.`);


  let newNickname = message.args[2].trim();

  if (!newNickname) {
    newNickname = "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ù–∏–∫–∞"; // –ù–∏–∫–Ω–µ–π–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    user.tag = newNickname;
    return bot(`–Ω–∏–∫–Ω–µ–π–º –Ω–µ —É–∫–∞–∑–∞–Ω, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∏–∫–Ω–µ–π–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: "${newNickname}".`);
  }

  user.tag = newNickname;

  await bot(`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "${newNickname}".`);
}
});

cmd.hear(/^(?:–∞–ø—Ä–æ—Ñ|–∞–¥–º–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å)$/i,async (message, bot) => {
      if (message.user.settings.adm < 1)
        return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

      let smileng = utils.pick([
        `üå∑`,
        `üå∏`,
        `üåπ`,
        `üå∫`,
        `üåº`,
        `üíê`,
        `‚ù§Ô∏è`,
        `üíì`,
        `üíï`,
      ]);
      let role = message.user.settings.adm
        .toString()
        .replace(/1/gi, "üîß –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        .replace(/2/gi, "üõ†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/3/gi, "üëë –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        .replace(/4/gi, "üìà –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞") 
        .replace(/5/gi, "üèÜ –í–ª–∞–¥–µ–ª–µ—Ü");
      if (message.user.settings.adm > 5) {
        role = "‚ùÑ –í—Å–µ–≤—ã—à–Ω–∏–π –∞–¥–º–∏–Ω";
      }
      return bot(`–≤–∞—à–∞ –∞–¥–º–∏–Ω-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${smileng}

üéÑ –°—Ç–∞—Ç—É—Å: ${role}
‚ö†Ô∏è –í—ã–≥–æ–≤–æ—Ä–æ–≤: [${message.user.astats.warn}/5]
üìù –û—Ç–≤–µ—á–µ–Ω–æ —Ä–µ–ø–æ—Ä—Ç–æ–≤: ${utils.sp(message.user.astats.reports)}
üò° –í—ã–¥–∞–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–∞: ${utils.sp(message.user.astats.bans)}
„Ä∞Ô∏è –í—ã–¥–∞–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ä–µ–ø–æ—Ä—Ç–∞: ${utils.sp(message.user.astats.rbans)}
üíµ –í—ã–¥–∞–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø–µ—Ä–µ–¥–∞—á–∏: ${utils.sp(message.user.astats.pbans)}
${message.user.astats.astat
          .toString()
          .replace(/false/gi, "‚ùå –ê–¥–º–∏–Ω-—Å—Ç–∞—Ç—É—Å: –æ—Ç–∫–ª—é—á–µ–Ω")
          .replace(/true/gi, "‚úÖ –ê–¥–º–∏–Ω-—Å—Ç–∞—Ç—É—Å: –≤–∫–ª—é—á–µ–Ω")}
‚ú≥Ô∏è –†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(message.user.astats.norm)}üëç | ${utils.sp(
            message.user.astats.bad
          )}üëé
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üí∞ –í—ã–¥–∞–Ω–æ –Ω–∞ –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.astats.balance)} $
üèß –í—ã–¥–∞–Ω–æ –Ω–∞ –±–∞–Ω–∫: ${utils.sp(message.user.astats.bank)} $
üïí –í —ç—Ç–æ–º —á–∞—Å—É –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å: ${utils.sp(message.user.limitadd.paylimitadd)} $

ü§ë –í–∞—à –∞–¥–º–∏–Ω-–±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.arubli)} ‚ÇΩ`);
    }
);

cmd.hear(/^(?:iget|–∏–≥–µ—Ç)\s?(.*)?$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  let idp; // ID –∏–≥—Ä–æ–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å VK ID –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π UID)
  let user; 

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∞
  if (message.args[1]) {
    const arg = message.args[1];

    if (!isNaN(Number(arg))) {
      // –ê—Ä–≥—É–º–µ–Ω—Ç - —á–∏—Å–ª–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å UID –∏–ª–∏ VK ID)
      idp = Number(arg);

      // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –ø–æ UID
      user = double.find((x) => x.uid === Number(idp));

      // –ï—Å–ª–∏ –ø–æ UID –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ VK ID
      if (!user) {
        user = double.find((x) => x.id === Number(idp));
      }
    } else {
      // –ê—Ä–≥—É–º–µ–Ω—Ç - —Å—Å—ã–ª–∫–∞
      if (!arg.match(/\|/i)) {
        const screenName = arg.replace(/^(https?:\/\/)?(m\.)?vk\.com\/?/i, "");

        try {
          const resolveResponse = await vk.api.utils.resolveScreenName({
            screen_name: screenName,
          });
          if (resolveResponse && resolveResponse.type === "user") {
            idp = resolveResponse.object_id;
          } else {
            return bot("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å—Å—ã–ª–∫–µ.");
          }
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ resolveScreenName:", error);
          return bot("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–µ—Ä–Ω–∞—è.");
        }
      } else {
        const extractedId = arg.replace(/((\|[^]*)|(\[id))/gi, "");
        idp = Number(extractedId);
      }

      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ VK ID
      user = double.find((x) => x.id === Number(idp));
    }
  } else if (message.forwards[0] || message.replyMessage) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∞
    idp = message.forwards[0] ? message.forwards[0].senderId : message.replyMessage.senderId;
    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ VK ID
    user = double.find((x) => x.id === Number(idp));
  } else {
    return bot(`–£–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –≤ –±–æ—Ç–µ/—Å—Å—ã–ª–∫—É/–ø—É—à/–ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`);
  }

  let txt = user.bans.ban
    ? `üìõ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ: ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${
        datka.getMonth() + 1
      }.${datka.getFullYear()}`
    : `üìõ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞–π–¥–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (!user) return bot(`–ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ ID!`);

  if (user.settings.adm >= 1) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const datka = new Date(user.bans.bantimer);

    return bot(
      `–ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:

üÜî ‚ûñ ID: ${utils.sp(user.uid)}
üîó ‚ûñ VK —Å—Å—ã–ª–∫–∞: vk.com/id${user.id}
üëÄ ‚ûñ –ù–∏–∫: ¬´${user.tag}¬ª
\n‚ô®Ô∏è ‚ûñ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${user.settings.adm} —É—Ä–æ–≤–Ω—è
üë§ ‚ûñ –°—Ç–∞—Ç—É—Å: ¬´${user.stock.status}¬ª

‚ö† –ê–¥–º–∏–Ω-–∏–Ω—Ñ–∞:
‚ôªÔ∏è ‚ûñ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: ${user.astats.reports}
üõë ‚ûñ –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤: ${user.astats.bans}
‚ö†Ô∏è ‚ûñ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: [${user.astats.warn}/5]
üÜò ‚ûñ –ë–∞–Ω–æ–≤ —Ä–µ–ø–æ—Ä—Ç–∞: ${user.astats.rbans}
üö´ ‚ûñ –ë–∞–Ω–æ–≤ –ø–µ—Ä–µ–¥–∞—á–∏: ${user.astats.pbans}
‚ú≥Ô∏è ‚ûñ –†–µ–ø—É—Ç–∞—Ü–∏—è: ${user.astats.norm}üëç | ${user.astats.bad}üëé

‚úÖ ‚ûñ –í—ã–¥–∞–Ω–æ –¥–µ–Ω–µ–≥: ${utils.sp(user.astats.balance)} $
üí≥ ‚ûñ –í—ã–¥–∞–Ω–æ –Ω–∞ –±–∞–Ω–∫: ${utils.sp(user.astats.bank)} $

${txt}

‚è≥ ‚ûñ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.regDate}
      `
    );
  } else {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—ã–≤–æ–¥–∏–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    return bot(`
      –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
üÜî ‚ûñ ID: ${utils.sp(user.uid)}
üîó ‚ûñ VK —Å—Å—ã–ª–∫–∞: vk.com/id${user.id}
üëÄ ‚ûñ –ù–∏–∫: ¬´${user.tag}¬ª
${txt}
\n 
`);
  }
});

cmd.hear(/^(?:get|–≥–µ—Ç)\s?(.*)?$/i, async (message, bot) => {
  if (
    message.user.settings.premium !== true &&
    message.user.settings.titan !== true &&
    message.user.settings.adm < 1
  )
    return bot(`–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ PREMIUM,TITAN,–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –≤—ã—à–µ`)

  let userId;
  let user;



  if (message.args[1]) {
    const arg = message.args[1];

    if (!isNaN(Number(arg))) {
      userId = Number(arg);
      user = double.find((x) => x.uid === userId) || double.find((x) => x.id === userId);
    } else {
      let screenName = arg.replace(/^(https?:\/\/)?(m\.)?vk\.com\/?/i, "");
      try {
        const resolveResponse = await vk.api.utils.resolveScreenName({ screen_name: screenName });
        if (resolveResponse?.type === 'user') userId = resolveResponse.object_id;
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ resolveScreenName:", error);
        return bot("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏.");
      }
      user = double.find((x) => x.id === userId);
    }
  } else if (message.forwards[0] || message.replyMessage) {
    const senderId = message.forwards[0]?.senderId || message.replyMessage?.senderId;
    user = double.find((x) => x.id === senderId);
  } else {
    return bot(`–£–∫–∞–∂–∏—Ç–µ ID/—Å—Å—ã–ª–∫—É/–ø–µ—Ä–µ—Å—ã–ª–∫—É`);
  }

  if (!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  if (user.antiget) return bot(`–£ –∏–≥—Ä–æ–∫–∞ –∞–Ω—Ç–∏–≥–µ—Ç.`);

  const { uid, id, tag, clanid, settings, stock, balance, bank, btc, marriage, rating, opit, energy, balance2, transport, realty, misc, regDate, aktiv, limit, bans, stars1, stars2, stars3, stars4, stars5, business, photo } = user;

  const clanss = clanid ? `‚öîÔ∏è –ö–ª–∞–Ω: ${clans[clanid].name}` : ``;
  const status = settings.imperator ? `üëëImperatorüëë` :
    settings.vip && settings.premium && settings.titan ? `üëë VIP + Premium + Titan` :
    settings.premium && settings.titan ? `üëë Premium + Titan` :
    settings.vip && settings.premium ? `üëë VIP + Premium` :
    settings.vip && settings.titan ? `üëë VIP + Titan` :
    settings.vip ? `üëë VIP —Å—Ç–∞—Ç—É—Å` :
    settings.premium ? `üëë Premium —Å—Ç–∞—Ç—É—Å` :
    settings.titan ? `üëë Titan —Å—Ç–∞—Ç—É—Å` : ``;

  const datka = new Date(bans.bantimer);
  const txt = bans.ban ? `üìõ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ: ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1}.${datka.getFullYear()}` : `üìõ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`;

  let star = "";
  if (stars1) star += `‚†Ä‚òÄ –°–æ–ª–Ω—Ü–µ\n`;
  if (stars2) star += `‚†Äüå† –°–∏—Ä–∏—É—Å\n`;
  if (stars3) star += `‚†Äüõë –ö—Ä–∞—Å–Ω—ã–π –≥–∏–≥–∞–Ω—Ç\n`;
  if (stars4) star += `‚†Äüß¨ –ü–ª–∞–∑–º–æ–≤—ã–π –≥–∏–≥–∞–Ω—Ç\n`;
  if (stars5) star += `‚†Äüí∞ –î–æ–Ω–∞—Ç–Ω—ã–π –≥–∏–≥–∞–Ω—Ç\n`;
  if (star) star = `\nüå† –ó–≤–µ–∑–¥—ã:\n` + star;

  const bbb = business.map(item => `‚†Ä ${businesses[item.id - 1][item.upgrade - 1].name}`).join('\n');

  const transportIcons = {
    car: cars[transport.car - 1]?.name,
    yacht: yachts[transport.yacht - 1]?.name,
    airplane: airplanes[transport.airplane - 1]?.name,
    helicopter: helicopters[transport.helicopter - 1]?.name,
  };

  const realtyIcons = {
    home: homes[realty.home - 1]?.name,
    apartment: apartments[realty.apartment - 1]?.name,
  };
  const userphoto = photo

  const miscIcons = {
    phone: phones[misc.phone - 1]?.name,
    pet: pets[misc.pet - 1]?.name,
    computer: computers[misc.computer - 1]?.name,
  };

  let imuschestvo = Object.entries(transportIcons)
    .filter(([, name]) => name)
    .map(([key, name]) => `‚†Ä${{ car: 'üöó', yacht: 'üõ•', airplane: 'üõ©', helicopter: 'üöÅ' }[key]} ${name}`)
    .concat(Object.entries(realtyIcons)
      .filter(([, name]) => name)
      .map(([key, name]) => `‚†Ä${{ home: 'üè†', apartment: 'üåá' }[key]} ${name}`))
    .concat(Object.entries(miscIcons)
      .filter(([, name]) => name)
      .map(([key, name]) => `‚†Ä${{ phone: 'üì±', pet: 'üêå', computer: 'üñ•' }[key]} ${name}`))
    .concat(misc.farm ? [`‚†Äüîã –§–µ—Ä–º–∞: ${misc.farm} (x${utils.sp(misc.farm_count)})`] : [])
    .join('\n');

  imuschestvo = imuschestvo ? `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n${imuschestvo}` : '';
  const bankInfo = bank ? `\nüí≥ –ë–∞–Ω–∫: ${utils.sp(bank - 1)}$` : ``;

  const output = `–ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞:
üÜî ID: ${utils.sp(uid)}
üîò –í–ö ID: ${id} | –°—Å—ã–ª–∫–∞ - vk.com/id${id}
üî• –ù–∏–∫: ¬´${tag}¬ª
${clanss}
üëë –ò–≥—Ä–æ–≤–æ–π —Å—Ç–∞—Ç—É—Å: ${status}
üåü –¢–∏—Ç—É–ª: ${stock.status}
üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(balance)}${bankInfo}
üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(btc)}‡∏ø
üíí –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${marriage.partner}
üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(rating)}
üèÜ –û–ø—ã—Ç: ${utils.sp(opit)} | üèã –≠–Ω–µ—Ä–≥–∏—è: ${energy}
üí∏ ${utils.sp(balance2)} ${val4}
${imuschestvo}
${bbb ? `\n${bbb}` : ``}
${star}
üìÜ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${regDate}
üîå –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${aktiv}
üíµ –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏: ${stock.stpban}
üîù –ó–∞–ø—Ä–µ—Ç –Ω–∞ —Ç–æ–ø–µ: ${stock.bantop}
üÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: ${stock.strban}
${txt}
‚û° –ü–µ—Ä–µ–¥–∞–ª: ${utils.sp(limit.sent)}$`;

  return bot(output,{
    attachment: userphoto,
  });
});

cmd.hear(/^(?:–±–æ–Ω—É—Å —Ä–∞–∑–±–∞–Ω)\s?([0-9]+)?/i, async (message, bot) => {

    if (message.user.settings.adm < 1)
      return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

    if (!message.isChat || message.chat.type !== 4) {
      return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
    }
  
    if (message.chat.type === 4) {

    let userId = Number(message.args[1]);
   
    
    let user = double.find(x => x.uid === userId);

    if (!user) {
      return bot(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }

    // –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –±–æ–Ω—É—Å
    user.bans.bonus = false;
    
    return bot(`–±–æ–Ω—É—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.tag} –±—ã–ª –≤–∫–ª—é—á–µ–Ω. ‚úÖ`);
  }
  });

cmd.hear(/^(?:–±–æ–Ω—É—Å –±–∞–Ω)\s?([0-9]+)?/i, async (message, bot) => {
   
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

        if (message.user.settings.adm < 5) return;

        let userId = Number(message.args[1]);

        let user = double.find(x => x.uid === userId);

        if (!user) {
            return bot(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }

        user.bans.bonus = true;

        return bot(`–±–æ–Ω—É—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.tag} –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω. üö´`);
    }
});

cmd.hear(/^(?:unblocktop|—Ä–∞–∑–±–∞–Ω—Ç–æ–ø)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

    let userId = parseInt(message.args[1], 10);
    let user = double.find((x) => x.uid == userId);

    if (!user) return bot(`–ù–µ–≤–µ—Ä–Ω—ã–π [ID] –∏–≥—Ä–æ–∫–∞`);

    if (user.bantop !== true) return message.send(`–£ —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –±–∞–Ω —Ç–æ–ø–∞.`);

    user.bantop = false; // –°–Ω–∏–º–∞–µ–º –±–∞–Ω
    user.stock.bantop = "–ù–µ—Ç"; // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å

    await bot(`–í—ã —Å–Ω—è–ª–∏ –±–∞–Ω —Ç–æ–ø —É –∏–≥—Ä–æ–∫–∞ ${user.tag}`);

    await vk.api.messages.send({
      user_id: user.id,
      message: `–í–∞–º —Å–Ω—è–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ç–æ–ø–∞. ‚úÖ`,
      random_id: 0,
    });

    await vk.api.messages.send({
      chat_id: chatlogi,
      message: `üî± –ö—Ç–æ: [id${message.user.id}|${message.user.tag}]
üÜî –í—ã–¥–∞–ª —Ä–∞–∑–±–∞–Ω—Ç–æ–ø: ${message.args[1]}`,
      random_id: 0
    });
  }
});

cmd.hear(/^(?:blocktop|–±–∞–Ω—Ç–æ–ø)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

  if (message.chat.type === 4) {

      let users = double.find((x) => x.uid == message.args[1]);

      if (!users) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π [ID] –∏–≥—Ä–æ–∫–∞`);

      if (user.bantop !== false)
        return message.send(`—É —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –∏–º–µ–µ—Ç—Å—è –±–∞–Ω —Ç–æ–ø–∞`);

      user.bantop = true;

      user.stock.bantop = "–î–∞";

      await bot(`–≤—ã –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤ —Ç–æ–ø–µ.`);

      await vk.api.messages.send({
        user_id: user.id,
        message: `–í–∞–º –≤—ã–¥–∞–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ç–æ–ø–∞. ‚úÖ`,
        random_id: 0,
      });

      vk.api.messages.send({
        chat_id: chatlogi,
        message: `üî± –ö—Ç–æ: [id${message.user.id}|${message.user.tag}]
üÜî –í—ã–¥–∞–ª –±–∞–Ω—Ç–æ–ø: ${message.args[1]}`,
        random_id: 0
      });
    }

});

cmd.hear(/^(?:—Ç–æ—á–∫–∞|—Ä–∞–∑–¥–µ–ª–∏)\s+(.+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);
  const text = message.args[1]; 

  if (!text) {
    return message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã '—Ç–æ—á–∫–∞'.");
  }

  if (isNaN(Number(text))) {
     return message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ")
  }

  if (utils && utils.sp) {
    const dots = utils.sp(text);
    message.reply(`${dots}`);
  }
});

cmd.hear(/^(?:–±–∞–Ω–ª–∏—Å—Ç)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  let bannedUsers = double.filter(x => x.bans.ban);

  if (bannedUsers.length === 0) {
    return bot('‚ú® –°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç! ‚ú®');
  }

  let bannedListMessage = 'üö´üõ°Ô∏è –°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n';

  for (const user of bannedUsers) {
    bannedListMessage += `üë§ [id${user.id}|${user.tag}]\n   üîë ID: \`${user.uid}\`\n   üìú –ü—Ä–∏—á–∏–Ω–∞: ${user.bans.reason}\n\n`; 
  }

  bannedListMessage += 'üëÆ‚Äç‚ôÇÔ∏è –ü—Ä–∏–Ω—è—Ç—ã –º–µ—Ä—ã.';

  try {
    await bot(bannedListMessage, { parse_mode: 'Markdown' });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞–Ω–ª–∏—Å—Ç–∞:", error);
    await bot("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.");
  }
});

cmd.hear(/^(?:–≤–∫|–≤—ã–¥–∞—Ç—å –∫–∞–ø—á—É|–∫–∞–ø—á–∞ –≤—ã–¥–∞—Ç—å|–≤—ã–¥–∞—á–∞ –∫–∞–ø—á–∏)\s(.+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –õ–° –±–æ—Ç–∞ –∏–ª–∏ –≤ —á–∞—Ç–µ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞



    let idp; // ID –∏–≥—Ä–æ–∫–∞

    // –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!message.forwards[0] && !message.replyMessage && !message.args[1]) {
      return bot(`üîç –£–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –≤ –±–æ—Ç–µ/—Å—Å—ã–ª–∫—É/–ø—É—à/–ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`);
    }

    if (message.args[1]) {
      const arg = message.args[1];
      if (!Number(arg)) { // –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ (—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –∏–º—è)
        if (!arg.match(/\|/i)) { // –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ [id...]
          try {
            const res = await vk.api.utils.resolveScreenName({ screen_name: arg });
            idp = res.object_id;
          } catch (error) {
            return bot(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å—Å—ã–ª–∫–µ/–∏–º–µ–Ω–∏: ${error.message}`);
          }
        } else { // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç [id...]
          idp = Number(arg.replace(/(\|[^]*)|(\[id)/ig, "")); // –ò–∑–≤–ª–µ–∫–∞–µ–º ID
        }
      } else { // –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç - —á–∏—Å–ª–æ
        idp = Number(arg);
      }
    } else { // –ï—Å–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–≤–µ—Ç
      if (message.forwards[0]) idp = message.forwards[0].senderId;
      if (message.replyMessage) idp = message.replyMessage.senderId;
    }

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID (—Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º –∫ Number)
    const user = double.find(x => x.uid === Number(idp) || x.id === Number(idp));
    if (!user) return bot(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ ID!`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞–ø—á–∏
    if (user.captcha.vid !== false) return bot(`‚ö†Ô∏è –û–Ω —É–∂–µ –∏–º–µ–µ—Ç –∫–∞–ø—á—É, –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å!`);

    // –í—ã–±–æ—Ä –≤–∏–¥–∞ –∫–∞–ø—á–∏
    const captchaType = utils.pick([1, 2]);

    if (captchaType === 1) {
      const answer = utils.random(100, 500);
      user.captcha.vid = 1;
      user.captcha.otvet = answer;

      await bot(`‚úÖ –ö–∞–ø—á–∞ –∏–≥—Ä–æ–∫—É ‚Ññ${utils.sp(user.uid)} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!\n\nüîé –í–∏–¥ –∫–∞–ø—á–∏: ‚Ññ1\nüé≤ –û—Ç–≤–µ—Ç –∫–∞–ø—á–∏: ${user.captcha.otvet}\n‚ùì –ó–∞ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—É—é –≤—ã–¥–∞—á—É –∫–∞–ø—á–∏ –∏–≥—Ä–æ–∫—É –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤—ã–≥–æ–≤–æ—Ä. –ë—É–¥—å—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ!`);

      return vk.api.messages.send({
        user_id: user.id,
        random_id: 0,
        message: `–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! ‚ùå\n–í–≤–µ–¥–∏—Ç–µ "–∫–∞–ø—á–∞ ${answer}", —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–æ–±–æ—Ç–∞!`,
        keyboard: JSON.stringify({
          inline: true,
          buttons: [
            [
              {
                action: {
                  type: "text",
                  payload: JSON.stringify({ command: `–∫–∞–ø—á–∞ ${answer}` }),
                  label: "‚úÖ –Ø –Ω–µ —Ä–æ–±–æ—Ç",
                },
                color: "positive",
              },
            ],
          ],
        }),
      });
    }

    if (captchaType === 2) {
      const pr1 = utils.pick([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]);
      const pr2 = utils.pick([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]);
      const answer = pr1 + pr2;
      user.captcha.vid = 1;
      user.captcha.otvet = answer;

      await bot(`‚úÖ –ö–∞–ø—á–∞ –∏–≥—Ä–æ–∫—É ‚Ññ${utils.sp(user.uid)} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!\n\nüîé –í–∏–¥ –∫–∞–ø—á–∏: ‚Ññ2\nüé≤ –ü—Ä–∏–º–µ—Ä, –≤—ã–¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫—É: ${pr1} + ${pr2}\n‚ùì –ó–∞ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—É—é –≤—ã–¥–∞—á—É –∫–∞–ø—á–∏ –∏–≥—Ä–æ–∫—É –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤—ã–≥–æ–≤–æ—Ä. –ë—É–¥—å—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ!`);

      return vk.api.messages.send({
        user_id: user.id,
        random_id: 0,
        message: `–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! ‚ùå\n–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä ¬´${pr1} + ${pr2}¬ª, –∏ –≤–≤–µ–¥–∏—Ç–µ "–∫–∞–ø—á–∞ [–æ—Ç–≤–µ—Ç]"` +
        ` –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç.`,
        keyboard: JSON.stringify({
          inline: true,
          buttons: [
            [
              {
                action: {
                  type: "text",
                  payload: JSON.stringify({ command: `–∫–∞–ø—á–∞ ${answer}` }),
                  label: "‚úÖ –Ø –Ω–µ —Ä–æ–±–æ—Ç",
                },
                color: "positive",
              },
            ],
          ],
        }),
      });
    }
  
});

cmd.hear(/^(?:–±–∞–Ω—Ü|ban)\s(—á–∞—Å)\s([0-9]+)\s([^]+)\s([0-9]+)\s(GB|\$)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

    let user = double.find((x) => x.uid == message.args[2]);



    if (message.user.settings.adm <= user.settings.adm) return;

    if (!user)
        return bot(
            `–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –í—ã –≤–≤–µ–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π üò°`
        );

    if (user.bans.ban !== false) return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É üö´`);
    user.bans.ban = true;
    if (message.args[3]) {
        user.bans.reason = message.args[3];
    } else {
        user.bans.reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
    }
    user.bans.bantimer = Date.now() + 3600000;
    const datka = new Date(user.bans.bantimer);
    message.user.astats.bans += 1;
    message.user.bantop = true;

    const refundAmount = parseInt(message.args[4], 10) || 0;
    const refundCurrency = message.args[5];
    const senderId = parseInt(message.args[6], 10); // –ü–æ–ª—É—á–∞–µ–º ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏
    let sender = double.find(x => x.id === senderId);

    if (!sender) {
        return bot(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${senderId} –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.`);
    }

    if (refundCurrency === 'GB') {
        sender.balance2 += refundAmount;
    } else if (refundCurrency === '$') {
        //–ø—Ä–µ–¥–ø–æ–ª–æ–≥–∞–µ–º, —á—Ç–æ bank2 - —Å—á–µ—Ç –¥–ª—è –¥–æ–ª–ª–∞—Ä–æ–≤
        sender.bank2 += refundAmount;
    }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º resolved –≤ true
        for (const key in transferHistory) {
          if (transferHistory.hasOwnProperty(key)) {
            transferHistory[key].forEach(transfer => {
              if (transfer.senderId === senderId && transfer.recipientId === user.id) {
                transfer.resolved = true;
              }
            });
          }
        }
        saveTransferHistory(transferHistory);

    await bot(
        `–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id}(${user.tag}) üî•\nüí¨ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${message.args[3]}\n\n`
    );
    let refundMessage = '';
    if (refundAmount > 0) {
        refundMessage = `\nüí∞ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ ${utils.sp(refundAmount)} ${refundCurrency} –∏–≥—Ä–æ–∫—É @id${sender.id} (${sender.tag})`;
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∏—Ç–µ–ª—é
        try {
            await vk.api.messages.send({
                user_id: senderId,
                message: `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±–º–∞–Ω –æ–¥–æ–±—Ä–µ–Ω–∞! –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ ${utils.sp(refundAmount)} ${refundCurrency}.`,
                random_id: 0,
            });
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∏—Ç–µ–ª—é (ID ${senderId}):`, error);
        }
    }


    await vk.api.messages.send({
        user_id: user.id,

        message: `‚ñ∂Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞! üö´\n\n‚ôªÔ∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ¬´${message.args[3]
            }¬ª\n‚è≥ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
            }.${datka.getFullYear()} (–ú–°–ö) ‚ùå`,

        random_id: 0,
    });

    await vk.api.messages.send({
        chat_id: chatlogi,
        random_id: 0,
        message: `‚ö†Ô∏è ADM-LOG:

      üéÖ ${message.user.settings.adm
                .toString()
                .replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
                .replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                .replace(/3/gi, "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                .replace(/4/gi, "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞")
                .replace(/5/gi, "–í–ª–∞–¥–µ–ª–µ—Ü")} @id${message.user.id} (${message.user.tag
            }) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ID: ${message.args[2]
            } üò°\n‚è∞ –°—Ä–æ–∫ –±–∞–Ω–∞: 1 —á–∞—Å üö´\n‚ôªÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${message.args[3]} ${refundMessage}`,
    });
});
 
cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1)
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

  if (!message.isChat || message.chat.type !== 4) {
    return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
  }

    if (message.chat.type === 4) {
        if (message.user.ochenka === undefined) {
            message.user.ochenka = false;
        }
        if (message.user.ochenka === true) {
            message.user.ochenka = false;
        }
        if (message.user.answeraccess === undefined) {
            message.user.answeraccess = true;
        } else {
            // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–≤–µ—Ç—É false, –≤—ã—Ö–æ–¥–∏–º
            if (message.user.answeraccess === false) return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (message.user.settings.adm < 1 && !message.user.settings.agent) return;

        // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ UID
        const user = double.find(x => x.uid == message.args[1]);
        if (!user) return bot(`–ò–≥—Ä–æ–∫ —Å ID ${message.args[1]} –Ω–µ –Ω–∞–π–¥–µ–Ω`);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, —É–∂–µ –ª–∏ –æ—Ç–≤–µ—á–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (user.rep === false) return bot(`–ò–≥—Ä–æ–∫—É —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏! üòÅ`);
        user.rep = false;
        user.admid = message.user.uid; // –°–æ—Ö—Ä–∞–Ω—è–µ–º UID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

        message.user.astats.reports += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–æ—Ä—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message.user.rubli += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ–Ω–∞—Ç-—Ä—É–±–ª–∏

        // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const reportText = user.vopros ? `\n–í–∞—à —Ä–µ–ø–æ—Ä—Ç: ¬´${user.vopros}¬ª` : ""; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç–∞
        const responseMessage = `‚ñ∂Ô∏è @id${message.user.id}(ADMINISTRATOR) —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –í–∞—à —Ä–µ–ø–æ—Ä—Ç!\n\nüí¨ –ï–≥–æ –æ—Ç–≤–µ—Ç: ${message.args[2]}${reportText} | –ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã üòâ\n\n‚ú≥Ô∏è –î–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.`;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await vk.api.messages.send({
            user_id: user.id,
            random_id: 0,
            message: responseMessage,
            keyboard: JSON.stringify({
                "inline": true,
                "buttons": [
                    [{
                        "action": {
                            "type": "text",
                            "payload": {command: `–æ—Ü–µ–Ω–∏—Ç—å ${message.user.uid} –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ`},
                            "label": "üëç"
                        },
                        "color": "default"
                    },
                        {
                            "action": {
                                "type": "text",
                                "payload": {command: `–æ—Ü–µ–Ω–∏—Ç—å ${message.user.uid} –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ`},
                                "label": "üëé"
                            },
                            "color": "default"
                        }]
                ]
            })
        }).catch(error => {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`);
        });

        // –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–º–∞–π–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
        let smileng = utils.pick([`üå∑`, `üå∏`, `üåπ`, `üå∫`, `üåº`, `üíê`, `‚ù§Ô∏è`, `üíì`, `üíï`]);

        return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∏–≥—Ä–æ–∫—É @id${user.id} (${user.tag}) –Ω–∞ –µ–≥–æ –≤–æ–ø—Ä–æ—Å! üí¨\n+1 –¥–æ–Ω–∞—Ç-—Ä—É–±–ª—å üíµ`);
    }
});

cmd.hear(/^(?:—Ç–æ–ø –æ—Ç–≤–µ—Ç—ã|‚ù§ —Ç–æ–ø –æ—Ç–≤–µ—Ç—ã)$/i, async (message, bot) => {

    if (message.user.settings.adm < 1)
      return bot(`–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã—à–µ`);

    if (!message.isChat || message.chat.type !== 4) {
      return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–µ—Å–µ–¥–µ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò.`);
    }
  
    if (message.chat.type === 4) {
    let top = [];

    double // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ double - —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
      .filter((x) => x.settings.adm >= 1)
      .map((x) => {
        top.push({
          reports: x.astats.reports,
          tag: x.tag,
          id: x.id,
          mention: x.mention,
        });
      });

    top.sort((a, b) => {
      return b.reports - a.reports;
    });

    let text = ``;
    const maxTopEntries = Math.min(10, double.filter((x) => x.settings.adm >= 1).length);

    const find = () => {
      let pos = 100;

      for (let i = 0; i < top.length; i++) {
        if (top[i].id === message.senderId) return (pos = i);
      }

      return pos;
    };

    for (let i = 0; i < maxTopEntries; i++) { 
      if (!top[i]) {
          break; 
        }


      const user = top[i];

      text += `\n${i === maxTopEntries - 1 ? `&#128287;` : `${(i + 1).toString().padStart(2, '0')}&#8419;`} ${user.mention ? `@id${user.id} (${user.tag})` : `${user.tag}`} ‚Äî üèÜ${utils.sp(user.reports)} –æ—Ç–≤–µ—Ç–æ–≤`;
    }

    return bot(`—Ç–æ–ø –æ—Ç–≤–µ—Ç–æ–≤:${text}
		‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚û°${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üèÜ${utils.sp(
      message.user.astats.reports
    )} –æ—Ç–≤–µ—Ç–æ–≤`);
  }
});

module.exports = commands;
