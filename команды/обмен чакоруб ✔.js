let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 
const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
    try {
      const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
      return tokens;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
      return null;
    }
  }



const tokenData3 = getToken3(); 


let val1 = tokenData3.val1
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4
let val5 = tokenData3.val5



cmd.hear(new RegExp(`^(?:–æ–±–º–µ–Ω ${val2}|–æ–±–º–µ–Ω–Ω–∏–∫|–æ|üõë –û–±–º–µ–Ω ${val2})$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type == 1) {
    utils.pick([`üå∑`, `üå∏`, `üåπ`, `üå∫`, `üåº`, `üíê`, `‚ù§Ô∏è`, `üíì`, `üíï`]);
    return bot(`–û–±–º–µ–Ω ${val2}:

üèÜ ‚ûñ –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏
1&#8419; Titan | 10.000 ${val2}
2&#8419; Premium | 5.500 ${val2}
3&#8419; VIP | 1.000 ${val2}

üì¶ ‚ûñ –ö–µ–π—Å—ã
4&#8419; –î–æ–Ω–∞—Ç-–∫–µ–π—Å | 150 ${val2}

üí∞ ‚ûñ –í–∞–ª—é—Ç–∞
5&#8419; 350.000.000 ${val1} | 349 ${val2}
6&#8419; 300.000.000 ${val1} | 299 ${val2}
7&#8419; 100.000.000 ${val1} | 100 ${val2}
8&#8419; 20.000.000 ${val1} | 20 ${val2}
9&#8419; 15.000.000 ${val1}  | 15 ${val2}
1&#8419;0&#8419; 10.000.000 ${val1} | 10 ${val2}
1&#8419;1&#8419; 5.000.000 ${val1} | 5 ${val2}
1&#8419;2&#8419; 3.000.000 ${val1} | 3 ${val2}

üí¨ ‚ûñ –î—Ä—É–≥–æ–µ
1&#8419;3&#8419; –ö–∏–Ω–æ—Å—Ç—É–¥–∏—è - 3.000.000 ${val1}/—á–∞—Å | 2.999 ${val2}
1&#8419;4&#8419; –î–ª–∏–Ω–Ω—ã–π –Ω–∏–∫ | 14 ${val2}

üåü ‚ûñ –ù–æ–≤–∏–Ω–∫–∏
1&#8419;5&#8419; –î–æ–Ω–∞—Ç–Ω—ã–π –ì–∏–≥–∞–Ω—Ç - 30 ${val2}/—á–∞—Å | 15.000 ${val2}
1&#8419;6&#8419; TITAN VIP | 25.000 ${val2}

üì¶ ‚ûñ –ü–æ—Å—ã–ª–∫–∏
1&#8419;7&#8419; –î–µ–Ω–µ–∂–Ω–∞—è –ø–æ—Å—ã–ª–∫–∞ | 250 ${val2}
1&#8419;8&#8419; –≠–ª–∏—Ç–Ω–∞—è –ø–æ—Å—ã–ª–∫–∞ | 1.000 ${val2}
1&#8419;9&#8419; –ü—Ä–µ–º–∏—É–º –ø–æ—Å—ã–ª–∫–∞ | 5.000 ${val2}

üíµ ‚ûñ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.rub)} ${val2}

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "${val2} [–Ω–æ–º–µ—Ä]".`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 1)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {

    if (30000 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}–π. ‚õî`);

    if (message.user.settings.titan == true) return bot(`—É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä. ‚úÖ`);

    message.user.rub -= 10000;
    message.user.settings.titan = true;
    message.user.bantop = true;
    message.user.stock.status = 'TITAN';

    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -10.000 ${val2} üí∞\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ TITAN.`);

  }
  });

cmd.hear(new RegExp(`^(?:${val2} 2)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (1499 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    if (message.user.settings.premium) return bot(`—É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å [Premium]. ‚úÖ`);

    if (!message.user.settings.premium) {

      message.user.settings.premium = true;

      message.user.rub -= 5500;

      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -5.500 ${val2} üí∞\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å—Ç–∞—Ç—É—Å ¬´PREMIUM¬ª! üéä\n\nüí¨ –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ ¬´Premium help¬ª ü§ó`);

    } 
  }

});



cmd.hear(new RegExp(`^(?:${val2} 3)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (1149 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    if (message.user.settings.vip) return bot(`—É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å [VIP]. ‚úÖ`);

    if (!message.user.settings.vip) {

      message.user.settings.vip = true;

      message.user.rub -= 1000;

      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -1.000 ${val2} üí∞\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å—Ç–∞—Ç—É—Å ¬´VIP¬ª! üéä\n\nüí¨ –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ ¬´VIP help¬ª ü§ó`);

    }
  }

});

cmd.hear(new RegExp(`^(?:${val2} 4)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {

    if (150 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    message.user.c3 += 1

    message.user.rub -= 150

    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -150 ${val2} üí∞\n\nüí¨ –î–æ–Ω–∞—Ç-–∫–µ–π—Å —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç. üì¶`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 5)$`, 'i'), async (message, bot) => {

  if (!message.isChat || message.chat.type === 1) {

    if (149 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 149;

    message.user.balance += 350000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -149 ${val2} üí∞\n\nüíµ +350.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 6)$`, 'i'), async (message, bot) => {

  if (!message.isChat || message.chat.type === 1) {

    if (299 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 299;

    message.user.balance += 300000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -299 ${val2} üí∞\n\nüíµ +300.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 7)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (100 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ß–∞–∫–æ-—Ä—É–±–ª–µ–π. ‚õî`);



    message.user.rub -= 100;

    message.user.balance += 100000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -100 ${val2} üí∞\n\nüíµ +100.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 8)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (20 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 20;

    message.user.balance += 20000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -20 ${val2} üí∞\n\nüíµ +20.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 9)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (15 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 15;

    message.user.balance += 15000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -15 ${val2} üí∞\n\nüíµ +15.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 10)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (10 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 10;

    message.user.balance += 50000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -10 ${val2} üí∞\n\nüíµ +50.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 11)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (5 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 5;

    message.user.balance += 15000000;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -5 ${val2} üí∞\n\nüíµ +15.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 12)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {


    if (3 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 3;

    message.user.balance += 50000000;



  return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -3 ${val2} üí∞\n\nüíµ +5.000.000 ${val1} —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 13)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (2999 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    if (message.user.business.length >= 3) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å 3 –±–∏–∑–Ω–µ—Å–∞`);



    message.user.rub -= 2999;

    message.user.business2.push({

      "id": 16,

      "upgrade": 1,

      "workers": 7500,

      "moneys": 0

    });



      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -2999 ${val2} üí∞\n\nüé• –ë–∏–∑–Ω–µ—Å ¬´–ö–∏–Ω–æ—Å—Ç—É–¥–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É¬ª –≤—ã–¥–∞–Ω–∞ –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç! üéâ`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 14)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (14 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    if (message.user.nicklimit > 31) return bot(`—É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä. ‚úÖ`);



    message.user.rub -= 14;

    message.user.nicklimit = 32;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -14 ${val2} üí∞\n\nüí¨ –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–ª–∏–Ω–Ω—ã–π –Ω–∏–∫-–Ω–µ–π–º, —Ç–µ–ø–µ—Ä—å –µ–≥–æ –¥–ª–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 32 —Å–∏–º–≤–æ–ª–∞. üî•`);
  }
});



cmd.hear(new RegExp(`^(?:${val2} 15)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.stars5) return bot(`–í—ã —É–∂–µ –∫—É–ø–∏–ª–∏ –¥–∞–Ω–Ω—É—é –∑–≤–µ–∑–¥—É ‚ùå`);

    if (message.user.rub >= 15000) {

      message.user.stars5 = true;

      message.user.rub -= 15000;

      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -15.000 ${val2} üí∞\n\n‚≠ê –ó–≤–µ–∑–¥–∞ ¬´–î–æ–Ω–∞—Ç–Ω—ã–π –≥–∏–≥–∞–Ω—Ç¬ª –≤—ã–¥–∞–Ω–∞ –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç! üéâ`);

    } else {

      return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    }


  }
});

cmd.hear(new RegExp(`^(?:${val2} 16)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (25000 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);



    message.user.rub -= 25000;

    message.user.settings.titan = true;

    message.user.limit.nicklimit = 48;

    message.user.level += 50;

    message.user.opit += 50000;

    message.user.limit.banklimit = 500000000000000;

    message.user.limit.farmlimit = 10000;

    message.user.limit.playerlimit = 300000000000000;

    message.user.limit.sent = 0;

    message.user.maxenergy = 100;



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -25.000 ${val2} üí∞\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å—Ç–∞—Ç—É—Å ¬´TITAN¬ª! üéä\n\nüí¨ –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ ¬´TITAN help¬ª ü§ó`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 17)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (250 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    message.user.possilka1 += 1;

    message.user.rub -= 250;

    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -250 ${val2} üí∞\n\nüì¶ –î–µ–Ω–µ–∂–Ω–∞—è –ø–æ—Å—ã–ª–∫–∞ —É–∂–µ –≤—ã–¥–∞–Ω–∞ –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç. –û—Ç–∫—Ä—ã—Ç—å: ¬´–ø–æ—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å 1¬ª üéâ`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 18)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (1000 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    message.user.possilka2 += 1;

    message.user.rub -= 1000;

    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -1000 ${val2} üí∞\n\nüì¶ –≠–ª–∏—Ç–Ω–∞—è –ø–æ—Å—ã–ª–∫–∞ —É–∂–µ –≤—ã–¥–∞–Ω–∞ –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç. –û—Ç–∫—Ä—ã—Ç—å: ¬´–ø–æ—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å 2¬ª üéâ`);
  }
});

cmd.hear(new RegExp(`^(?:${val2} 19)$`, 'i'), async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (5000 > message.user.rub) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2}. ‚õî`);

    message.user.possilka3 += 1;

    message.user.rub -= 5000;

    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -5000 ${val2} üí∞\n\nüì¶ –ü—Ä–µ–º–∏—É–º –ø–æ—Å—ã–ª–∫–∞ —É–∂–µ –≤—ã–¥–∞–Ω–∞ –Ω–∞ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç. –û—Ç–∫—Ä—ã—Ç—å: ¬´–ø–æ—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å 3¬ª üéâ`);
  }

});


cmd.hear(/^(?:üìà –û–±–º–µ–Ω|–û–±–º–µ–Ω)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    await bot(`üí∞ –û–±–º–µ–Ω–Ω–∏–∫ ${val4}

üí± –í–∞–ª—é—Ç–∞

1‚É£ 1.000 ${val4} ‚ûú 20.000.000 ${val1}

üéÅ Starr Drop

2‚É£ 150.000 ${val4} ‚ûú Starr Drop

üíµ –î–æ–Ω–∞—Ç ‚Äì –†—É–±–ª–∏

3‚É£ 1.000.000 ${val4} ‚ûú 10 —Ä—É–±–ª–µ–π

üí≥ –û–±–º–µ–Ω –Ω–∞ ${val4}

4‚É£ 60.000.000 ${val1} ‚ûú 1.000 ${val4}
5‚É£ 1.000 ${val2} ‚ûú 10.000 ${val4}
6‚É£ 1 –±–∏–ª–µ—Ç ‚ûú 5.000 ${val4}


üìä –í–∞—à –±–∞–ª–∞–Ω—Å –≤–∞–ª—é—Ç:

üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)} ${val1}

üí∏ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.rubli)} —Ä—É–±–ª–µ–π

üéüÔ∏è –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.bilet)} –±–∏–ª–µ—Ç–æ–≤

üí∏ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.rub)} ${val2}–æ–≤

üíæ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance2)} ${val4}

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–û–±–º–µ–Ω [–Ω–æ–º–µ—Ä] [–∫–æ–ª-–≤–æ]"`)
  }
})

cmd.hear(/^(?:–û–±–º–µ–Ω 1)(?: (\d+))?$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1
    const count = message.args[1] ? Math.max(1, Math.min(100, Number(message.args[1]))) : 1;

    const costPerExchange = 1000; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞
    const gainPerExchange = 40000000; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞

    const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å


    if (message.user.balance2 < costPerExchange) {
   return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ  ${val4}`)
    }

    if (message.user.balance2 < totalCost) {
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
      const maxExchanges = Math.floor(message.user.balance2 / costPerExchange);
      return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val4} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} ${val4}. ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
        keyboard: JSON.stringify({
          "inline": true,
          "buttons": [
            [{
              "action": {
                "type": "text",
                "payload": "{}",
                "label": `–û–±–º–µ–Ω 1 ${maxExchanges}`
              },
              "color": "default"
            }]
          ]
        })
      });
    }

    message.user.balance += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    message.user.balance2 -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è



    return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} ${val4} üí∞\n\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} ${val1}`);
  }
});

cmd.hear(/^(?:–û–±–º–µ–Ω 2)\s+(\d+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
      const count = Number(message.args[1]); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ message.args[1]



      const costPerExchange = 150000; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val4
      const gainPerExchange = 1; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ Starr Drop (c4)

      const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
      const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (message.user.balance2 < costPerExchange) {
          return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val4}`);
      }

      if (message.user.balance2 < totalCost) {
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
          const maxExchanges = Math.floor(message.user.balance2 / costPerExchange);
          return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val4} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} ${val4}. ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
              keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                      [{
                          "action": {
                              "type": "text",
                              "payload": "{}",
                              "label": `–û–±–º–µ–Ω 2 ${maxExchanges}`
                          },
                          "color": "default"
                      }]
                  ]
              })
          });
      }

      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞
      message.user.c4 += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Starr Drop
      message.user.balance2 -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val4



      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} ${val4} üí∞\n\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} Starr Drop`);
  }
});

cmd.hear(/^(?:–û–±–º–µ–Ω 3)\s+(\d+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
      const count = Number(message.args[1]); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞



      const costPerExchange = 1000000; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val4
      const gainPerExchange = 10; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö

      const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ val4
      const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å –≤ —Ä—É–±–ª—è—Ö

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (message.user.balance2 < totalCost) {
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
          const maxExchanges = Math.floor(message.user.balance2 / costPerExchange);
          return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ val4 –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} ${val4}. ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
              keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                      [{
                          "action": {
                              "type": "text",
                              "payload": "{}",
                              "label": `–û–±–º–µ–Ω 3 ${maxExchanges}`
                          },
                          "color": "default"
                      }]
                  ]
              })
          });
      }

      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞
      message.user.balance2 -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val4
      message.user.rubli += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä—É–±–ª—è—Ö



      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} val4 üí∞\n\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} —Ä—É–±–ª–µ–π`);
  }
});

cmd.hear(/^(?:–û–±–º–µ–Ω 4)\s+(\d+)$/i, async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
        const count = parseInt(message.args[1], 10); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ

        if (isNaN(count) || count <= 0) {
            return message.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤. ‚ùó");
        }

        const costPerExchange = 60000000; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val1
        const gainPerExchange = 1000; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val4

        const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ val1
        const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å –≤ val4

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (message.user.balance < totalCost) {
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
            const maxExchanges = Math.floor(message.user.balance / costPerExchange);
            return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val1} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} ${val1}. ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
                keyboard: JSON.stringify({
                    "inline": true,
                    "buttons": [
                        [{
                            "action": {
                                "type": "text",
                                "payload": "{}",
                                "label": `–û–±–º–µ–Ω 4 ${maxExchanges}`
                            },
                            "color": "default"
                        }]
                    ]
                })
            });
        }

        // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞
        message.user.balance -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val1
        message.user.balance2 += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val4


        return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} ${val1} üí∞\n\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} ${val4}`);
    }
});

cmd.hear(/^(?:–û–±–º–µ–Ω 5)\s+(\d+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
      const count = Number(message.args[1]); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞



      const costPerExchange = 1000; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val2
      const gainPerExchange = 10000; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val4

      const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ val2
      const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å –≤ val4

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (message.user.rub < totalCost) {
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
          const maxExchanges = Math.floor(message.user.rub / costPerExchange);
          return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${val2} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} ${val2}. ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
              keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                      [{
                          "action": {
                              "type": "text",
                              "payload": "{}",
                              "label": `–û–±–º–µ–Ω 5 ${maxExchanges}`
                          },
                          "color": "default"
                      }]
                  ]
              })
          });
      }

      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞
      message.user.rub -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val2
      message.user.balance2 += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val4


      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} ${val2} üí∞\n\\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} ${val4}`);
  }
});

cmd.hear(/^(?:–û–±–º–µ–Ω 6)\s+(\d+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
      const count = Number(message.args[1]); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞



      const costPerExchange = 1; // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ –±–∏–ª–µ—Ç–∞—Ö
      const gainPerExchange = 5000; // –ü—Ä–∏–±—ã–ª—å –æ—Ç –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤ val4

      const totalCost = costPerExchange * count; // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –±–∏–ª–µ—Ç–∞—Ö
      const totalGain = gainPerExchange * count; // –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å –≤ val4

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (message.user.bilet < totalCost) {
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
          const maxExchanges = Math.floor(message.user.bilet / costPerExchange);
          return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–º–µ–Ω–∞. –í–∞–º –Ω—É–∂–Ω–æ ${totalCost.toLocaleString()} –±–∏–ª–µ—Ç(–æ–≤). ‚õî\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ${maxExchanges} –æ–±–º–µ–Ω–æ–≤.`, {
              keyboard: JSON.stringify({
                  "inline": true,
                  "buttons": [
                      [{
                          "action": {
                              "type": "text",
                              "payload": "{}",
                              "label": `–û–±–º–µ–Ω 6 ${maxExchanges}`
                          },
                          "color": "default"
                      }]
                  ]
              })
          });
      }

      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞
      message.user.bilet -= totalCost; // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∏–ª–µ—Ç–∞—Ö
      message.user.balance2 += totalGain; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ val4


      return message.send(`‚ñ∂Ô∏è –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞! -${totalCost.toLocaleString()} –±–∏–ª–µ—Ç(–æ–≤) üí∞\n\nüéâ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: ${totalGain.toLocaleString()} ${val4}`);
  }
});



let tokensCache = null;
      
setInterval(() => {
    tokensCache = getToken3(); 
    if (tokensCache) {
        val1 = tokensCache.val1; 
        val2 = tokensCache.val2; 
        val3 = tokensCache.val3; 
        val4 = tokensCache.val4; 
    }
    
  }, 1000);

module.exports = commands;
