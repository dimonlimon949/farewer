let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
    try {
      const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
      return tokens;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
      return null;
    }
  }

const tokenData3 = getToken3(); 

let val1 = tokenData3.val1
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4
let val5 = tokenData3.val5



function addZero(num) {
  return num < 10 ? '0' + num : num;
}

function unixStampLefta(stampa) {
  stampa = stampa / 1000; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –≤ —Å–µ–∫—É–Ω–¥—ã
  let s = Math.floor(stampa % 60); // –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 60 –¥–ª—è —Å–µ–∫—É–Ω–¥
  stampa = Math.floor(stampa / 60); // –£–±–∏—Ä–∞–µ–º —Å–µ–∫—É–Ω–¥—ã

  let m = Math.floor(stampa % 60); // –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 60 –¥–ª—è –º–∏–Ω—É—Ç
  stampa = Math.floor(stampa / 60); // –£–±–∏—Ä–∞–µ–º –º–∏–Ω—É—Ç—ã

  let h = Math.floor(stampa % 24); // –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 24 –¥–ª—è —á–∞—Å–æ–≤
  let d = Math.floor(stampa / 24); // –î–µ–ª–∏–º –Ω–∞ 24 –¥–ª—è –¥–Ω–µ–π
  let y = Math.floor(d / 365); // –î–µ–ª–∏–º –Ω–∞ 365 –¥–ª—è –ª–µ—Ç
  d = d % 365; // –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 365 –¥–ª—è –¥–Ω–µ–π

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –µ–¥–∏–Ω–∏—Ü –≤—Ä–µ–º–µ–Ω–∏
  let text = '';
  if (y > 0) text += `${y} –≥. `;
  if (d > 0) text += `${d} –¥. `;
  if (h > 0) text += `${addZero(h)} —á. `;
  text += `${addZero(m)} –º–∏–Ω. ${addZero(s)} —Å–µ–∫.`;

  return text.trim(); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
}




cmd.hear(/^(?:–±–æ–Ω—É—Å|üéÅ –ë–æ–Ω—É—Å)$/i, async (message, bot) => {
  try {
    if (message.user.bans.bonus) {
      return bot(`üö´ –í–∞–º –æ—Ç–∫–ª—é—á–µ–Ω –±–æ–Ω—É—Å. üö´`);
    }

    if (!message.isChat || message.chat.type === 1) {
      await handlePrivateBonus(message, bot);
    } else if (message.chat.type === 2) {
      await handleGroupBonus(message, bot);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –±–æ–Ω—É—Å:", error);
    await bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

async function handlePrivateBonus(message, bot) {
  if (message.user.timers.bonus >= Date.now()) {
    return bot(`‚è≥ –ë–æ–Ω—É—Å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ ${unixStampLefta(message.user.timers.bonus - Date.now())} ‚è≥`);
  }

  const randbal = utils.random(5000000, 50000000);
  const randrating = utils.random(5, 20);
  const randbank = utils.random(1000000, 5000000);
  const randbtc = utils.random(10, 100);
  const randbil = utils.random(1, 3);
  const randgb = utils.random(100, 1000);

  message.user.timers.bonus = Date.now() + 3600000; 

  const prize = utils.random(1, 6);

  if (!message.user.now.kv1 && message.user.now.kv) { 
    message.user.now.kv1 = true;
    message.user.bilet += 10;
    await bot(`‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª 1 –∑–∞–¥–∞–Ω–∏–µ! 
  –ù–∞–≥—Ä–∞–¥–∞ - 10 –±–∏–ª–µ—Ç–æ–≤ üéüÔ∏è. 
  
  üí° –ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –∫–∞–∂–¥—ã–π —á–∞—Å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–Ω—É—Å –∏ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏–∑—ã!`, {
      keyboard: JSON.stringify({
        "inline": true,
        "buttons": [
          [{
            "action": {
              "type": "text",
              payload: JSON.stringify({ command: `–ø—É—Ç—å –Ω–æ–≤–∏—á–∫–∞` }),
              "label": `üëÄ –ü—É—Ç—å –Ω–æ–≤–∏—á–∫–∞`
            },
            "color": "positive"
          }]
        ]
      })
    });
  }


  switch (prize) {
    case 1:
      message.user.balance += randbal;
      return bot(`üí∞ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randbal)} ${val1}! üí∞`);
    case 2:
      message.user.rating += randrating;
      return bot(`üëë –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randrating)} —Ä–µ–π—Ç–∏–Ω–≥–∞! üëë\nüèÜ –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
    case 3:
      message.user.bank += randbank;
      return bot(`üè¶ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randbank)}$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç! üè¶\nüí≥ –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)} ${val1}`);
    case 4:
      message.user.btc += randbtc;
      return bot(`‚Çø –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randbtc)} –±–∏—Ç–∫–æ–∏–Ω–æ–≤! ‚Çø\nüåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‚Çø`);
    case 5:
      message.user.bilet += randbil;
      return bot(`üéüÔ∏è –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randbil)} –±–∏–ª–µ—Ç–æ–≤! üéüÔ∏è`);
    case 6:
        message.user.balance2 += randgb;
        return bot(`üéüÔ∏è –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(randgb)} ${val4} ! üéüÔ∏è`);
    default:
      console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∏–∑:", prize);
      return bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–∏–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

async function handleGroupBonus(message, bot) {
  if (message.user.balance2 > 999999) {
    return bot("üö´ –ë–æ–Ω—É—Å –Ω–µ –Ω–∞—á–∏—Å–ª–µ–Ω, —É –≤–∞—Å —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –±–∞–ª–∞–Ω—Å. üö´");
  }

  if (message.user.timers.bonus2 > Date.now()) {
    let timeLeft = unixStampLefta(message.user.timers.bonus2 - Date.now());
    return bot(`‚è≥ –î–æ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞: ${timeLeft} ‚è≥`);
  }

  const bonusConfigs = [
    { condition: () => message.user.settings.vip, bonus: 200, name: 'VIP –±–æ–Ω—É—Å' },
    { condition: () => message.user.settings.premium, bonus: 300, name: 'PREMIUM –±–æ–Ω—É—Å' },
    { condition: () => message.user.settings.topdon, bonus: 1000, name: 'TOP DONATOR –±–æ–Ω—É—Å' },
    { condition: () => message.user.settings.adm > 0, bonus: 500, name: 'ADMIN –±–æ–Ω—É—Å' },
    { condition: () => true, bonus: 100, name: '–±–æ–Ω—É—Å' }
  ];

  const validBonuses = bonusConfigs.filter(config => config.condition());

  const bestBonus = validBonuses.reduce((max, config) => config.bonus > max.bonus ? config : max, { bonus: 0, name: '–±–æ–Ω—É—Å' });

  await bot(`üéâ ${bestBonus.name}: +${utils.sp(bestBonus.bonus)} GB! üíµ`);

  message.user.balance2 += bestBonus.bonus;
  message.user.timers.bonus2 = Date.now() + 1200000; // 20 –º–∏–Ω—É—Ç
  message.user.bonusCounter = (message.user.bonusCounter || 0) + 1;
}

cmd.hear(/^(?:–±–æ–Ω—É—Å –∏–º–ø–µ—Ä–∞—Ç–æ—Ä|–±–æ–Ω—É—Å imperator|imperarot –±–æ–Ω—É—Å|–∏–º–ø–µ—Ä–∞—Ç–æ—Ä –±–æ–Ω—É—Å)$/i, async (message, bot) => {
  try {
    if (message.user.bans.bonus) {
      return bot(`üö´ –í–∞–º –æ—Ç–∫–ª—é—á–µ–Ω –±–æ–Ω—É—Å. üö´`);
    }
    if (!message.isChat || message.chat.type === 1) {
      await handleImperatorBonus(message, bot);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –±–æ–Ω—É—Å –∏–º–ø–µ—Ä–∞—Ç–æ—Ä:", error);
    await bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–ø–µ—Ä–∞—Ç–æ—Ä—Å–∫–æ–≥–æ –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

async function handleImperatorBonus(message, bot) {
  if (!message.user.settings.imperator) return;

  if (message.user.timers.imperatorbonus >= Date.now()) {
    return bot(`üëë –ò–º–ø–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${unixStampLefta(message.user.timers.imperatorbonus - Date.now())}. üëë`);
  }

  const imperatorbonus1 = utils.random(1, 6);
  message.user.timers.imperatorbonus = Date.now() + 86400000; 

  switch (imperatorbonus1) {
    case 1:
      const bonuscash = utils.random(10000000, 100000000);
      message.user.balance += bonuscash;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonuscash)} ${val1}! üéâ`);
    case 2:
      const bonusbtc = utils.random(1000, 5000);
      message.user.btc += bonusbtc;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbtc)} ‚Çø! üéâ`);
    case 3:
      const bonusrating = utils.random(10, 65);
      message.user.rating += bonusrating;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusrating)} —Ä–µ–π—Ç–∏–Ω–≥–∞! üëë`);
    case 4:
      const bonusopit = utils.random(3000, 5000);
      message.user.opit += bonusopit;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusopit)} –æ–ø—ã—Ç–∞! üèÜ`);
    case 5:
      message.user.c3 += 1;
      message.send({ sticker_id: 108235 });
      return bot(`üéâ –£–•-–¢–´! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ! üéÅ`);
    case 6:
      message.user.c5 += 2;
      message.send({ sticker_id: 108225 });
      return bot(`üéâ –í–û–¢ –≠–¢–û –£–î–ê–ß–ê! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2 —Å—É–ø–µ—Ä –∫–µ–π—Å–∞! üéÅ`);
    default:
      console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ–Ω—É—Å:", imperatorbonus1);
      return bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

cmd.hear(/^(?:–±–æ–Ω—É—Å —Ç–∏—Ç–∞–Ω|–±–æ–Ω—É—Å Titan|Titan –±–æ–Ω—É—Å|–ø—Ä–µ–º–∏—É–º —Ç–∏—Ç–∞–Ω)$/i, async (message, bot) => {
  try {
    if (message.user.bans.bonus) {
      return bot(`üö´ –í–∞–º –æ—Ç–∫–ª—é—á–µ–Ω –±–æ–Ω—É—Å. üö´`);
    }
    if (!message.isChat || message.chat.type === 1) {
      await handleTitanBonus(message, bot);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /–±–æ–Ω—É—Å —Ç–∏—Ç–∞–Ω:", error);
    await bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏—Ç–∞–Ω –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

async function handleTitanBonus(message, bot) {
  if (message.user.settings.titan !== true) return;

  if (message.user.timers.titanbonus > Date.now()) {
    return bot(`‚è≥ –¢–∏—Ç–∞–Ω –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${unixStampLefta(message.user.timers.titanbonus - Date.now())}. ‚è≥`);
  }

  const titanbonus1 = utils.random(1, 5);
  message.user.timers.titanbonus = Date.now() + 86400000; // 24 —á–∞—Å–∞

  switch (titanbonus1) {
    case 1:
      const bonuscash = utils.random(0, 0);
      message.user.balance += bonuscash;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonuscash)} ${val1}! üí∞`);
    case 2:
      const bonusbtc = utils.random(100, 500);
      message.user.btc += bonusbtc;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbtc)} ‚Çø! üíé`);
    case 3:
      const bonusrating = utils.random(30, 40);
      message.user.rating += bonusrating;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusrating)} —Ä–µ–π—Ç–∏–Ω–≥–∞! üëë`);
    case 4:
      const bonusopit = utils.random(300, 3000);
      message.user.opit += bonusopit;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusopit)} –æ–ø—ã—Ç–∞! üèÜ`);
    case 5:
      const bonusbilet = utils.random(1, 4);
      message.user.bilet += bonusbilet;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbilet)} –±–∏–ª–µ—Ç–æ–≤! üé´`);
    default:
      console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏—Ç–∞–Ω –±–æ–Ω—É—Å:", titanbonus1);
      return bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–∏—Ç–∞–Ω –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

cmd.hear(/^(?:–±–æ–Ω—É—Å –ø—Ä–µ–º–∏—É–º|–±–æ–Ω—É—Å PREMIUM|PREMIUM –±–æ–Ω—É—Å|–ø—Ä–µ–º–∏—É–º –±–æ–Ω—É—Å)$/i, async (message, bot) => {
  try {
    if (message.user.bans.bonus) {
      return bot(`üö´ –í–∞–º –æ—Ç–∫–ª—é—á–µ–Ω –±–æ–Ω—É—Å. üö´`);
    }
    if (!message.isChat || message.chat.type === 1) {
      await handlePremiumBonus(message, bot);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /–±–æ–Ω—É—Å –ø—Ä–µ–º–∏—É–º:", error);
    await bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–º–∏—É–º –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

async function handlePremiumBonus(message, bot) {
  if (message.user.settings.premium !== true) return;

  if (message.user.timers.prembonus > Date.now()) {
    return bot(`‚è≥ –ü—Ä–µ–º–∏—É–º –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${unixStampLefta(message.user.timers.prembonus - Date.now())}. ‚è≥`);
  }

  const premiumbonus = utils.random(1, 5);
  message.user.timers.prembonus = Date.now() + 86400000; // 24 —á–∞—Å–∞

  switch (premiumbonus) {
    case 1:
      const bonuscash = utils.random(5000000, 50000000);
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonuscash)} ${val1}! üí∞`);
    case 2:
      const bonusbtc = utils.random(10, 500);
      message.user.btc += bonusbtc;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbtc)} ‚Çø! üíé`);
    case 3:
      const bonusrating = utils.random(30, 300);
      message.user.rating += bonusrating;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusrating)} —Ä–µ–π—Ç–∏–Ω–≥–∞! üëë`);
    case 4:
      const bonusopit = utils.random(300, 3000);
      message.user.opit += bonusopit;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusopit)} –æ–ø—ã—Ç–∞! üèÜ`);
    case 5:
      const bonusbilet = utils.random(1, 4);
      message.user.bilet += bonusbilet;
      return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbilet)} –±–∏–ª–µ—Ç–æ–≤! üé´`);
    default:
      console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–º–∏—É–º –±–æ–Ω—É—Å:", premiumbonus);
      return bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–µ–º–∏—É–º –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

cmd.hear(/^(?:–±–æ–Ω—É—Å –≤–∏–ø|–±–æ–Ω—É—Å VIP|VIP –±–æ–Ω—É—Å|–≤–∏–ø –±–æ–Ω—É—Å)$/i, async (message, bot) => {
  try {
    if (message.user.bans.bonus) {
      return bot(`üö´ –í–∞–º –æ—Ç–∫–ª—é—á–µ–Ω –±–æ–Ω—É—Å. üö´`);
    }
    if (!message.isChat || message.chat.type === 1) {
      await handleVipBonus(message, bot);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /–±–æ–Ω—É—Å –≤–∏–ø:", error);
    await bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ VIP –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

async function handleVipBonus(message, bot) {
  if (message.user.settings.vip !== true) return;

  const timeLeft = message.user.timers.vipbonus - Date.now();
  if (timeLeft > 0) {
    const formattedTime = unixStampLefta(timeLeft);
    return bot(`‚è≥ –í–∏–ø –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${formattedTime}. ‚è≥`);
  }

  const vipbonus = utils.random(1, 4);
  message.user.timers.vipbonus = Date.now() + 86400000;

  let bonusMessage, attachment;

  switch (vipbonus) {
    case 1:
      const bonuscash = utils.random(30000000, 300000000);
      message.user.balance += bonuscash;
      bonusMessage = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonuscash)} ${val1}! üí∞`;
      attachment = utils.pick([`photo-219408161_457239349`]);
      break;
    case 2:
      const bonusbtc = utils.random(5, 1150);
      message.user.btc += bonusbtc;
      bonusMessage = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusbtc)}‚Çø! üíé`;
      attachment = utils.pick([`photo-219408161_457239350`]);
      break;
    case 3:
      const bonusrating = utils.random(10, 100);
      message.user.rating += bonusrating;
      bonusMessage = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusrating)} —Ä–µ–π—Ç–∏–Ω–≥–∞! üëë`;
      attachment = utils.pick([`photo-219408161_457239351`]);
      break;
    case 4:
      const bonusopit = utils.random(100, 1000);
      message.user.opit += bonusopit;
      bonusMessage = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(bonusopit)} –æ–ø—ã—Ç–∞! üèÜ`;
      attachment = utils.pick([`photo-219408161_457239352`]);
      break;
    default:
      console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π VIP –±–æ–Ω—É—Å:", vipbonus);
      return bot("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ VIP –±–æ–Ω—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }

  return bot(bonusMessage, { attachment });
}

setInterval(() => {
  tokensCache = getToken3(); 
  if (tokensCache) {
      val1 = tokensCache.val1; 
      val2 = tokensCache.val2; 
      val3 = tokensCache.val3; 
      val4 = tokensCache.val4; 
  }
}, 1000);

module.exports = commands;
